@import "variables";
@import "mixins";




* { /*общие стили для всего*/
  padding: 0;
  margin: 0;
}

.block:not(.first) { /*обращение ко всем блокам, у которых нет класса first*/
  height: 200px;
  background: $bgColor;
  width: $blockWidth;
  border: $border;
  margin-bottom: 20px;

  ul { // стиль для блока с id='central_block', все дочерние элементы под ul - аналог закоменнтированной записи внизу
    list-style: none; // удаление кроужочков у элементов списка
  }
}

#central_block { // стиль для блока с id='central_block' со списком li
  padding: 30px;
  ul { // стиль для блока с id='central_block', все дочерние элементы под ul
    list-style: none; // удаление кроужочков у элементов списка
    display: inline-block; /*отобразить в одну линию содержимое, контейнер по ширине содержимого*/
  }
  li {
    float: left; /*поместил li в одну строчку*/
    margin-right: 1rem;// внешний отступ справа

    a {
      color: green;
      @include myFont1;
    }
  }
}

#liNumber4 {
  @include myFontWithParams(green, 20px 40px 30px 1rem);
}


.first { /*обращение ко блокку first*/
  height: 150px;
  background: $bgColor;
  width: $blockWidth;
  border: $border;
  margin-bottom: 30px;
}

#prostoEsheOdnaSsilka {
  @include prostoEsheOdnaSsilka1(red, green) // в ссылку добавляем миксин с двумя входящими параметрами цвета
}
#grid {
  width: 100%;
  height: 290px;
  div {
    @include myGrid($cols: 5, $margin:5%); // задаем на сколько ячеек разбиваем ширину экрана и какой отступ по краям и вниз
  }
}

@for $i from 24 to 29 {
  .#{$someVar}-#{$i} {
    width: 50px + $i*10;
    height: 50px + $i*10;
  }
}
