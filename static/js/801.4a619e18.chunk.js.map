{"version":3,"file":"static/js/801.4a619e18.chunk.js","mappings":"4IAwCA,WAAeA,EAAAA,EAAAA,KAPO,SAACC,GACnB,MAAO,CACHC,KAAMD,EAAME,KAAKD,KACjBE,QAASH,EAAME,KAAKC,QAE5B,GAOuB,KALvB,EA/BwC,SAAHC,GAAyB,IAApBH,EAAIG,EAAJH,KAAME,EAAOC,EAAPD,QAC5C,OAAQE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qMACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,keACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yaACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gIACHD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,+TAA4DC,EAAAA,EAAAA,KAAA,KAC3DC,KAAK,wCAAuCF,SAAC,0CAAyC,+MAE1FD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,qNAAiDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,IAAS,KAACM,EAAAA,EAAAA,KAAA,SAAK,iUACLA,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,IAAY,0NAGlFI,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6WACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wlBAIX,G","sources":["components/Info/UsersInfo.tsx"],"sourcesContent":["import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {GlobalStateType} from \"../../redux/store-redux\";\r\nimport {NulableType} from \"../../types/commonTypes\";\r\n\r\ntype UsersInfoType = {\r\n    myId: NulableType<number>,\r\n    myLogin: string\r\n}\r\nlet UsersInfo:React.FC<UsersInfoType> = ({myId, myLogin}) => {\r\n    return (<div>\r\n        <p>Пользователей можно искать по имени;</p>\r\n        <p>Вы можете добавить пользователей в избранное, нажав звездочку. Аналогично их можно удалять;</p>\r\n        <p>Если нажать звездочку в поле поиска, отобразятся только избранные пользователи;</p>\r\n        <p>Реализована пагинация;</p>\r\n        <p>Так же вы можете зарегистрировать новый аккаунт на странице <a\r\n            href=\"https://social-network.samuraijs.com/\">https://social-network.samuraijs.com/</a> и добавить его через\r\n            поиск в избранное;</p>\r\n        <p>Свой ID вы добавить в друзья не можете - Ваш ID: <b>{myId}</b> <br/>\r\n            Попробуйте найти его при помощи пагинации. Или вбейте в поиск <b>{myLogin}</b>. Кнопка добавления не будет\r\n            реагировать;\r\n        </p>\r\n        <p>В карточке пользователя при клике по аватару можно перейти в профиль;</p>\r\n        <p>Так же можно перейти на страницу диалога с выбранным пользователем, нажав соответствующую пиктограмму в\r\n            карточе. </p>\r\n\r\n    </div>)\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    myId: NulableType<number>,\r\n    myLogin: string\r\n}\r\nlet mapStateToProps = (state:GlobalStateType) => {\r\n    return {\r\n        myId: state.auth.myId,\r\n        myLogin: state.auth.myLogin\r\n    }\r\n}\r\n\r\nexport default connect<\r\n    mapStateToPropsType,// тип mapStateToProps\r\n    null, // тип mapDispatchToProps\r\n    unknown,// тип входящих пропсов от родителя\r\n    GlobalStateType// глобальный стейт из стора\r\n    >(mapStateToProps, null)(UsersInfo)\r\n"],"names":["connect","state","myId","auth","myLogin","_ref","_jsxs","children","_jsx","href"],"sourceRoot":""}