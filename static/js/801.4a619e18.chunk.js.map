{"version":3,"file":"static/js/801.4a619e18.chunk.js","mappings":"4IAiCA,WAAeA,EAAAA,EAAAA,KARS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAME,KAAKD,KACjBE,QAASH,EAAME,KAAKC,QAE5B,GAQuB,KALvB,EA7BgD,SAAHC,GAAyB,IAApBH,EAAIG,EAAJH,KAAME,EAAOC,EAAPD,QACpD,OAAQE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qMACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,keACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yaACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gIACHD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,+TAA4DC,EAAAA,EAAAA,KAAA,KAC3DC,KAAK,wCAAuCF,SAAC,0CAAyC,+MAE1FD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,qNAAiDC,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,IAAS,KAACM,EAAAA,EAAAA,KAAA,SAAK,iUACLA,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,IAAY,0NAGlFI,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6WACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wlBAIX,G","sources":["components/Info/UsersInfo.tsx"],"sourcesContent":["import {connect} from \"react-redux\";\nimport React from \"react\";\nimport {GlobalStateType} from \"../../redux/store-redux\";\n\nconst UsersInfo:React.FC<mapStateToPropsType> = ({myId, myLogin}) => {\n    return (<div>\n        <p>Пользователей можно искать по имени;</p>\n        <p>Вы можете добавить пользователей в избранное, нажав звездочку. Аналогично их можно удалять;</p>\n        <p>Если нажать звездочку в поле поиска, отобразятся только избранные пользователи;</p>\n        <p>Реализована пагинация;</p>\n        <p>Так же вы можете зарегистрировать новый аккаунт на странице <a\n            href=\"https://social-network.samuraijs.com/\">https://social-network.samuraijs.com/</a> и добавить его через\n            поиск в избранное;</p>\n        <p>Свой ID вы добавить в друзья не можете - Ваш ID: <b>{myId}</b> <br/>\n            Попробуйте найти его при помощи пагинации. Или вбейте в поиск <b>{myLogin}</b>. Кнопка добавления не будет\n            реагировать;\n        </p>\n        <p>В карточке пользователя при клике по аватару можно перейти в профиль;</p>\n        <p>Так же можно перейти на страницу диалога с выбранным пользователем, нажав соответствующую пиктограмму в\n            карточе. </p>\n\n    </div>)\n}\n\n\nconst mapStateToProps = (state:GlobalStateType) => {\n    return {\n        myId: state.auth.myId as number,\n        myLogin: state.auth.myLogin as string,\n    }\n}\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\n\nexport default connect<\n    mapStateToPropsType,// тип mapStateToProps\n    null, // тип mapDispatchToProps\n    unknown,// тип входящих пропсов от родителя\n    GlobalStateType// глобальный стейт из стора\n    >(mapStateToProps, null)(UsersInfo)\n"],"names":["connect","state","myId","auth","myLogin","_ref","_jsxs","children","_jsx","href"],"sourceRoot":""}