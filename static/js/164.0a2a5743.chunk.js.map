{"version":3,"file":"static/js/164.0a2a5743.chunk.js","mappings":"gSAQIA,EAAkB,CAClBC,KAAM,GACNC,MAAO,GACPC,QAAS,IAETC,EAAqBC,EAAAA,GAAW,CAChCH,MAAOG,EAAAA,KACFH,MAAM,yBACXC,QAASE,EAAAA,KACJC,SAAS,cAiElB,EA9DuB,SAAH,GAAwB,IAAnBC,EAAY,EAAZA,aAMrB,OAAQ,0BACA,SAAC,KAAM,CACHC,cAAeR,EACfS,iBAAkBL,EAClBM,SATO,SAACC,EAAO,GAAkB,IAAhBC,EAAS,EAATA,UACzBL,EAAaI,GACbC,GACJ,EAMiC,SAGpB,YACgB,EAAXC,YAAW,OAEb,SAAC,KAAI,WACD,0BACI,4BACI,SAAC,KAAY,CACTC,MAAM,8CACNb,KAAK,OACLc,KAAK,OACLC,YAAY,qBACZC,gBAAgB,UAIpB,SAAC,KAAY,CACTH,MAAM,QACNb,KAAK,QACLc,KAAK,QACLC,YAAY,QACZC,gBAAgB,UAGpB,SAAC,KAAY,CACTH,MAAM,4DACNb,KAAK,UACLc,KAAK,WACLC,YAAY,yDAEZC,gBAAgB,UAGpB,SAACC,EAAA,EAAG,CAACC,UAAU,OAAM,UAEjB,UAACC,EAAA,EAAM,CAACL,KAAK,SAAQ,UAAC,IAA6B,oBAO5D,KAM3B,E,8BCtEA,EAVwB,WACpB,OAAQ,0BACJ,yBAAG,uTAA2D,KAC1D,cAAGM,KAAK,mCAAkC,SAAC,wEAAgB,MAAE,kBAAK,qBACjD,kBAAK,8BACI,sBAGtC,ECkCA,EAnCiB,SAAH,GAA2D,IAAtDd,EAAY,EAAZA,aAAce,EAAc,EAAdA,eAAgBC,EAAiB,EAAjBA,kBAE7C,GAAwBC,EAAAA,EAAAA,YAAWD,GAAkB,eAA9CE,EAAI,KAAEC,EAAO,KAEpB,GAAIJ,EAAgB,CAChB,IAAMK,GAAc,yBAAK,gDACnBC,GAAY,yBAAMN,IAKxB,OAAO,0BACH,SAACO,EAAA,EAAQ,CACLJ,KAAMA,EACNC,QAASA,EAETC,YAAaA,EACbC,UAAWA,EACXE,cAXc,WAClBP,EAAkB,GACtB,EAUQQ,WAAY,gDAGxB,CAEA,OAAO,4BACH,eAAIZ,UAAWa,EAAAA,EAAAA,WAAyB,SAAC,cACzC,UAACC,EAAA,EAAS,CAACC,OAAK,aACZ,SAAC,EAAc,CAAC3B,aAAcA,KAC9B,gBAAKY,UAAU,OAAM,UAAC,SAAC,EAAiB,WAKpD,ECnCMgB,EAAiB,qJAIlB,OAJkB,oCAEnB5B,aAAe,SAAC6B,GACZ,EAAKC,MAAMC,0BAA0BF,EACzC,EAAC,EAUA,OAVA,8BAED,WACI,OAAO,0BACH,SAAC,EAAQ,CACL7B,aAAcgC,KAAKhC,aACnBe,eAAgBiB,KAAKF,MAAMf,eAC3BC,kBAAmBgB,KAAKF,MAAMd,qBAG1C,KAAC,EAdkB,CAASiB,EAAAA,WAuBhC,GAAeC,EAAAA,EAAAA,KANO,SAACC,GACnB,MAAO,CACHpB,eAAgBoB,EAAMC,SAASrB,eAEvC,GAGI,CAACgB,0BAAAA,EAAAA,GAA2Bf,kBAAAA,EAAAA,IADhC,CACoDY,E","sources":["components/FeedBack/FeedBackFormik/FeedBackFormik.jsx","components/Info/FeedBackInfoShort.jsx","components/FeedBack/FeedBackBS.jsx","components/FeedBack/FeedBackContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport {Formik, Form, ErrorMessage} from \"formik\"; //формик с компонентами и пользовательским хуком\nimport * as Yup from 'yup' // валидация форм с помошью сторонней библиотеки Yup\n//import DisplayFormikState from \"../../common/formikCommon/DisplayFormikState\"\nimport {MyTextInput} from \"../../common/formikCommon/MyFieldsBS\"\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\n\nlet myInitialValues = { // начальные зачения форм\n    name: \"\",\n    email: \"\",\n    message: \"\",\n}\nlet myValidationSchema = Yup.object({ // валидация форм на required, длину и заполнение полей\n    email: Yup.string()\n        .email('Invalid email address'),\n    message: Yup.string()\n        .required('Required'),\n})\n\nconst FeedBackFormik = ({sendFeedBack}) => { // основная компонента с входным колбэком, чтобы забрать данные с форм\n    const myOnSubmit = (values, {resetForm}) => { // действия по сабмиту\n        sendFeedBack(values) // колбек, который принмает результат ввода формы\n        resetForm()// сбросить значение формы после ввода\n    }\n\n    return (<div>\n            <Formik\n                initialValues={myInitialValues}\n                validationSchema={myValidationSchema}\n                onSubmit={myOnSubmit}\n            >\n\n                {({\n                      handleReset,// обнуление полей\n                  }) => ( // обертка для вывода значений ввода в любом месте формы паралельно (или в итоге)\n                    <Form>\n                        <div>\n                            <div>\n                                <MyTextInput // сообщение в MyPostsBS\n                                    label=\"Ваше имя\"\n                                    name='name'\n                                    type='text'\n                                    placeholder='имя'\n                                    leftLabelLength='7rem'\n\n                                />\n\n                                <MyTextInput // email\n                                    label=\"Email\"\n                                    name='email'\n                                    type='email'\n                                    placeholder='email'\n                                    leftLabelLength='7rem'\n                                />\n\n                                <MyTextInput // сообщение\n                                    label=\"Сообщение * \"\n                                    name='message'\n                                    type='textarea'\n                                    placeholder='сообщение'\n                                    //  autoFocus={true}\n                                    leftLabelLength='7rem'\n                                />\n\n                                <Row className=\"mx-1\">\n\n                                    <Button type=\"submit\"> {/*кнопка отправить форму*/}\n                                        Submit\n                                    </Button>\n                                </Row>\n                            </div>\n                        </div>\n                        {/* <DisplayFormikState/> {/*отображение всего стейта формика*/}\n                    </Form>\n                )}\n            </Formik>\n        </div>\n\n    )\n}\n\nexport default FeedBackFormik\n\n","let FeedBackInfoShort = () => {\r\n    return (<div>\r\n        <p>Проверить отправку почты можно на тестовом почтовом ящике {\" \"}\r\n            <a href=\"https://passport.yandex.ru/auth/\">яндекс почты</a>: <br/>\r\n            testfeedback2023 <br/>\r\n            testfeedback2023_password <br/>\r\n        </p>\r\n    </div>)\r\n}\r\n\r\nexport default FeedBackInfoShort\r\n","import React, {useState} from \"react\";\r\nimport FeedBackFormik from \"./FeedBackFormik/FeedBackFormik\";\r\nimport commonClasses from \"../common/CommonClasses/common.module.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ModalBS1 from \"../common/ModalBS/ModalBS1\";\r\nimport FeedBackInfoShort from \"../Info/FeedBackInfoShort\";\r\n\r\nconst FeedBack = ({sendFeedBack, feedBackStatus, setFeedBackStatus}) => {\r\n\r\n    const [show, setShow] = useState(!!setFeedBackStatus); // хук задания флага показать ли модальное окно\r\n\r\n    if (feedBackStatus) { // если статус feedback из BLL не пустой\r\n        const modalHeader = <div>Спасибо!</div>\r\n        const modalBody = <div>{feedBackStatus}</div>\r\n        const buttonOnClick = () => {\r\n            setFeedBackStatus(\"\")\r\n        }\r\n\r\n        return <div>\r\n            <ModalBS1\r\n                show={show} // флаг показать ли модальное окно\r\n                setShow={setShow} // колбек смены флага показать модальное окно\r\n\r\n                modalHeader={modalHeader} // заголовок модального окна\r\n                modalBody={modalBody} // тело модального окна\r\n                buttonOnClick={buttonOnClick} // действие по кнопке модального окна\r\n                buttonName={\"Закрыть\"} // текст кнопки\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return <div>\r\n        <h2 className={commonClasses.pageHeader}>FeedBack</h2>\r\n        <Container fluid>\r\n            <FeedBackFormik sendFeedBack={sendFeedBack}/>\r\n            <div className='my-3'><FeedBackInfoShort/></div>\r\n\r\n        </Container>\r\n    </div>\r\n\r\n};\r\n\r\nexport default FeedBack;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {postFeedBackThunkCreator2, setFeedBackStatus} from \"../../redux/feedback-reducer.ts\";\r\nimport FeedBack from \"./FeedBackBS\";\r\n\r\nclass FeedBackContainer extends React.Component {\r\n\r\n    sendFeedBack = (data) => {\r\n        this.props.postFeedBackThunkCreator2(data)// отправка фидбека из api\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <FeedBack\r\n                sendFeedBack={this.sendFeedBack} // колбек отправки сообщения из контейнера\r\n                feedBackStatus={this.props.feedBackStatus} // фидбэк статус из BLL\r\n                setFeedBackStatus={this.props.setFeedBackStatus} // задать статус (обнулить для отправки нового сообщения)\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        feedBackStatus: state.feedback.feedBackStatus // статус отправки сообщения на сервер\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {postFeedBackThunkCreator2, setFeedBackStatus})(FeedBackContainer);\r\n"],"names":["myInitialValues","name","email","message","myValidationSchema","Yup","required","sendFeedBack","initialValues","validationSchema","onSubmit","values","resetForm","handleReset","label","type","placeholder","leftLabelLength","Row","className","Button","href","feedBackStatus","setFeedBackStatus","useState","show","setShow","modalHeader","modalBody","ModalBS1","buttonOnClick","buttonName","commonClasses","Container","fluid","FeedBackContainer","data","props","postFeedBackThunkCreator2","this","React","connect","state","feedback"],"sourceRoot":""}