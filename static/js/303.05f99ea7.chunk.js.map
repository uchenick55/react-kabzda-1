{"version":3,"file":"static/js/303.05f99ea7.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/users/Users.module.css?d05c","webpack://my-app/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/PaginationByCourse.jsx","components/users/FindUsers.jsx","components/users/Users.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/users/users-selectors.jsx","components/users/UsersContainer.jsx","components/users/ExportDefaultUsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__UooOC\",\"users\":\"Users_users__uG5mD\",\"inputFindUsers\":\"Users_inputFindUsers__KZpZG\",\"preloader\":\"Users_preloader__Sz3u6\"};","// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Pagination_selected__cyt5G\"};","import React, {useState} from \"react\";\r\nimport classes from \"./Pagination.module.css\";\r\nimport {PointerCursor} from \"../../Dark_light_theme/globalStyles\";\r\n\r\nlet PaginationByCourse = ({\r\n                              totalUsersCount, // общее число пользователей на сервере\r\n                              pageSize, // количество пользователей на одной странице\r\n                              currentPage, // текущая страница пагинации\r\n                              onPageChanged, // колбек-функция изменения текущей страницы\r\n                              PortionSize = 10, // количество отображаемых страниц из всего массива\r\n                              currentRangeLocal,\r\n                              onChangeRangeLocal\r\n                          }) => {\r\n    // currentRange - текущий диапазон. Он в PortionSize меньше PagesCount\r\n    //setCurrentRange - изменение currentRange по клику на кнопку\r\n    // PortionSizeLeft - Нижнее значение порций (не меньше 1)\r\n    const [mouseHovered, setMouseHovered] = useState(\"\");\r\n    let PagesCount = Math.ceil(totalUsersCount / pageSize); // сколько всего страниц можно вызвать\r\n    //с пользователями пачками по PageSize\r\n    let pages = []; // определяем массив страниц под всех пользователей\r\n    for (let i = 1; i <= PagesCount; i++) {\r\n        // В этот массив\r\n        pages.push(i); // добавляем все страницы пользователей\r\n    }\r\n\r\n    let PortionSizeLeft = 1 + PortionSize * (currentRangeLocal - 1); // Нижнее значение порций (не меньше 1)\r\n    let PortionSizeRight = PortionSize * currentRangeLocal; // Верхнее значение страниц (не больше PagesCount)\r\n    let slicedPages2 = pages.filter(\r\n        // фильтруем весь массив страниц пользователей\r\n        (p) => p >= PortionSizeLeft && p <= PortionSizeRight // оставляем только в заданном диапазоне\r\n    );\r\n    const prevPortion = () => { // по клеку на кнопку Prev\r\n        if (currentRangeLocal > 1) // если текущий диапазон больше 1\r\n        {\r\n            onChangeRangeLocal(-1) // уменьшаем диапазон на 1\r\n        }\r\n    };\r\n\r\n    const nextPortion = () => {\r\n        if (currentRangeLocal < Math.ceil(PagesCount / PortionSize))\r\n            // если текущий диапазон меньше максимального\r\n        {\r\n            onChangeRangeLocal(+1) // увеличиваем диапазон на 1\r\n        }\r\n    };\r\n\r\n    let renderSlicedPages = slicedPages2.map((p) => { // мапинг отобранного массива\r\n        return (\r\n            <span\r\n                key={p} // ключ - страница\r\n                onMouseLeave={() => { // мышка ушла с элемента (страницы)\r\n                    setMouseHovered(0); // номер выделенной страницы зануляем\r\n                }}\r\n                onClick={() => { // по клику\r\n                    onPageChanged(p); // смена текущей старницы на кликнутую\r\n                }}\r\n                onMouseOver={() => { // мышка сверху элемента (страницы)\r\n                    setMouseHovered(p); // номер выделенной страницы равен отрисованной странице\r\n                }}\r\n            >\r\n                <span className={\r\n                    (p === currentPage || p === mouseHovered)?// если страница равна текущей, или на нее навели мышкой\r\n                     classes.selected: null}> {p} </span>  {/*отрисовать страницу жирным шрифтом, иначе обычным*/}\r\n            </span>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {/*<div> Текущая страница {currentPage}</div>*/}\r\n            {(currentRangeLocal) > 1\r\n                ? <button onClick={prevPortion}>Prev</button> // кнопка Prev активна с обработчиком\r\n                : <button disabled>Prev</button> // кнопка Prev неактивна\r\n            }\r\n            <PointerCursor> {/*стиль мышки рука */}\r\n                {renderSlicedPages} {/*отрисовка пагинации десяти страниц внутри кнопок*/}\r\n            </PointerCursor>\r\n\r\n            <button onClick={nextPortion}>Next</button>\r\n            {/*кнопка следующая страница*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaginationByCourse;\r\n","import React from 'react';\n\nclass FindUsers extends React.Component {\n    render() {\n        return null // здесь будет формик вместо простого input\n    }\n}\n\nexport default FindUsers\n","import React, {useState} from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/no-image3.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PaginationByCourse from \"../common/Pagination/PaginationByCourse\";\r\nimport {bedug_mode} from \"../../redux/store-redux\";\r\nimport ScrollContainer from \"../common/Scroll/ScrollContainer\";\r\nimport FindUsers from \"./FindUsers\";\r\n\r\nlet Users = ({\r\n                 totalUsersCount, pageSize, currentPage, onPageChanged, users,\r\n                 followingInProgress, unfollowAPI, isAuth, followAPI,\r\n                 SetTermFunction, onChangeTerm, onChangeTermFunction,\r\n                 onChangeRangeLocal, currentRangeLocal, myID // раскукожили все пропсы\r\n             }) => {\r\n    const [error, setError] = useState(\"\")\r\n    if  (error) {return error.message}\r\n    try {\r\n        if (bedug_mode) {\r\n            console.log(\"Users\")\r\n        }\r\n\r\n        let FollowUnfollowButtons = ({u, followUnfollowAPICallback, buttonText}) => { // унификация нажатия кнопки Follow/Unfollow\r\n            return (<span>\r\n                <button\r\n                    disabled={followingInProgress.some(id => id === u.id) || u.id === myID}\r\n                    // отключение возможности повторного нажатия пока не пришел ответ от сервера или если это ваш ID\r\n                    onClick={() => {\r\n                        isAuth // проверка авторизации. Если нет, то алерт. Если да, то API запрос на follow/unfollow\r\n                            ? followUnfollowAPICallback(u.id) //send to server request follow/unfollow from UsersContainer\r\n                            : alert(\"You are not authorized, please Login\") // алерт авторизуйтесь!\r\n                    }}> {buttonText}\r\n                </button>\r\n                    {/* buttonText - текст кнопки Follow/Unfollow*/}\r\n            </span>\r\n            )\r\n        }\r\n        const handleClick = (e) => { // обработка клика по кнопке\r\n            e.preventDefault(); // отменить отправку формы по умолчанию с кнопки\r\n            SetTermFunction() // задать в стейт значения поиска после сабмита\r\n        }\r\n\r\n        let UserItems =\r\n            users.map((u) => {\r\n             //   throw new Error(\"Я - сообщение об ошибке\"); //проверка обработки ошибок\r\n                return (\r\n                    <div key={u.id}>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img alt={\"userPhoto\"} className={classes.userPhoto}\r\n                                     src={u.photos.small !== null\r\n                                         ? u.photos.small\r\n                                         : userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div> My FriendList:{\" \"}\r\n                            {u.followed\r\n                                ? <FollowUnfollowButtons u={u} followUnfollowAPICallback={unfollowAPI}\r\n                                                         buttonText={\"Remove\"}/>\r\n                                : <FollowUnfollowButtons u={u} followUnfollowAPICallback={followAPI}\r\n                                                         buttonText={\"Add\"}/>\r\n                            }\r\n                        </div>\r\n                        <div>Name: {u.name}</div>\r\n                        <div>{u.status}</div>\r\n                        <div>{u.id}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        let paginationRender = <PaginationByCourse\r\n            totalUsersCount={totalUsersCount} pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            currentRangeLocal={currentRangeLocal}\r\n            onChangeRangeLocal={onChangeRangeLocal}\r\n\r\n        />\r\n        let inputButtonRender = <form className={classes.inputFindUsers}>  {/* объединение инпута и кнопки*/}\r\n            <input\r\n                value={onChangeTerm} // значение поля поиска захардкодили\r\n                onChange={(event) => {\r\n                    onChangeTermFunction(event)\r\n                }} // по изменению поля получить значение\r\n                onBlur={SetTermFunction}// задать в локальный стейт значение поиска при потере фокуса\r\n                placeholder={\"find users\"} // пояснение поля ввода\r\n                autoFocus // сразу фокусировка на поле ввода\r\n            />\r\n            <button onClick={handleClick}>Find</button>\r\n            {/* кнопка с обработчиком клика*/}\r\n        </form>\r\n\r\n\r\n        return <div className={classes.users}>\r\n\r\n            <div> Total users: {totalUsersCount}        </div>\r\n            <div>\r\n                {paginationRender}{/*Вывод пагинации вверху страницы */}\r\n            </div>\r\n            <div>\r\n                {inputButtonRender} {/*вывод инпута и кнопки для поиска юзеров*/}\r\n            </div>\r\n            <div>\r\n                <FindUsers/>\r\n            </div>\r\n\r\n            {/*отрисовка Users в скрол контейнере*/}\r\n            <ScrollContainer\r\n                child={UserItems}\r\n                height={window.screen.availHeight - 298}\r\n                firstInsideContainer={\"UsersUp\"}\r\n                secondInsideContainer={\"UsersDown\"}\r\n                containerElement={\"UserContainer\"}\r\n            />\r\n\r\n        </div>\r\n\r\n    } catch (error) {\r\n        setError(error); // задание в стейт ошибки\r\n    } finally {\r\n    // console.log(\"try/catch Users.jsx выполнен! \") действие после прохождения try/catch\r\n}\r\n\r\n}\r\n\r\nexport default Users\r\n\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\";\r\n\r\nexport const usersSelectorsSimple = { // простой селектор получить из стейта users\r\n    getUsersSL: (state) => {\r\n        return state.usersPage.users\r\n    },\r\n    getPageSize: (state) => {// простой селектор получить из стейта pageSize\r\n        return state.usersPage.pageSize\r\n    },\r\n    getTotalUsersCount: (state) => {// простой селектор получить из стейта totalUsersCount\r\n        return state.usersPage.totalUsersCount\r\n    },\r\n    getCurrentPage: (state) => {// простой селектор получить из стейта currentPage\r\n        return state.usersPage.currentPage\r\n    },\r\n    getIsFetching: (state) => {// простой селектор получить из стейта isFetching\r\n        return state.usersPage.isFetching\r\n    },\r\n    getFollowingInProgress: (state) => {// простой селектор получить из стейта followingInProgress\r\n        return state.usersPage.followingInProgress\r\n    },\r\n    getIsAuth: (state) => {// простой селектор получить из стейта isAuth\r\n        return state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let getUsersReselect = createSelector(usersSelectorsSimple.getUsersSL, (users) => {\r\n    return users // имитация сложного селектора через реселект\r\n})\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    setCurrentPage, setTerm, unfollowThunkCreator,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getUsersReselect, usersSelectorsSimple} from \"./users-selectors\";\r\n\r\nclass UsersAPI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            onChangeTerm: this.props.term, // задание поискового запроса в локальный стейт обновления поля\r\n            currentRangeLocal: 1 // текущий диапазон \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {getUsersThunkCreator, currentPage, pageSize, term } = this.props; // данные из пропсов для получения пользователей по умолчанию\r\n        getUsersThunkCreator(currentPage, pageSize, term);\r\n    }\r\n    onChangeTermFunction = (event) => {\r\n        this.setState({onChangeTerm: event.currentTarget.value }) // задание значения поиска при изменении поля\r\n    }\r\n    onChangeRangeLocal = (rangeShift) => { // rangeShift - смещение диапазона страниц пагинации2\r\n        this.setState({currentRangeLocal: this.state.currentRangeLocal + rangeShift })\r\n\r\n    }\r\n    SetTermFunction = () => {\r\n        this.props.setTerm(this.state.onChangeTerm) // задание в стейт поискового запроса\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.term !== this.props.term) {\r\n            this.props.setCurrentPage(1)// задание в стейт текущей страницы\r\n            this.setState({currentRangeLocal: 1}) // перевод диапазона пагинации2 на 1 (сброс)\r\n            const {getUsersThunkCreator, pageSize, term } = this.props; // получение из проспсов данные для запроса\r\n            getUsersThunkCreator(1, pageSize, term);// получение списка пользователей с поисковым запросом (переключение на 1 страницу)\r\n        }\r\n    }\r\n\r\n\r\n    onPageChanged = (setPage) => {\r\n        const {setCurrentPage, getUsersThunkCreator, pageSize, term } = this.props;\r\n        setCurrentPage(setPage, );\r\n        getUsersThunkCreator(setPage, pageSize, term );\r\n    }\r\n    followAPI = (id) => {\r\n        this.props.followThunkCreator(id, this.props.currentPage,this.props.pageSize, this.props.term)\r\n    }\r\n    unfollowAPI = (id) => {\r\n        this.props.unfollowThunkCreator(id, this.props.currentPage,this.props.pageSize, this.props.term)\r\n    }\r\n    render() {\r\n        const {isFetching, totalUsersCount, pageSize, currentPage, users, followingInProgress, isAuth} = this.props;\r\n        return <> {/*использование фрагмента вместо div/span*/}\r\n            {isFetching && <Preloader/>}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   currentPage={currentPage}\r\n                   users={users}\r\n                   unfollowAPI={this.unfollowAPI}\r\n                   followAPI={this.followAPI}\r\n                   followingInProgress={followingInProgress}\r\n                   isAuth={isAuth}\r\n                   SetTermFunction = {this.SetTermFunction}\r\n                   onChangeTerm = {this.state.onChangeTerm}\r\n                   onChangeTermFunction = {this.onChangeTermFunction}\r\n                   currentRangeLocal= {this.state.currentRangeLocal}\r\n                   onChangeRangeLocal = {this.onChangeRangeLocal}\r\n                   myID ={this.props.myID}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersReselect(state), // Реселектор users- список пользователей в пачке от сервера\r\n        pageSize: usersSelectorsSimple.getPageSize(state),// селектор pageSize - количество пользователей на странице\r\n        totalUsersCount: usersSelectorsSimple.getTotalUsersCount(state), // селектор totalUsersCount - общее число пользователей с сервера\r\n        currentPage: usersSelectorsSimple.getCurrentPage(state),// селектор currentPage - текущая страница пачки пользователей с сервера\r\n        isFetching: usersSelectorsSimple.getIsFetching(state), // селектор isFetching - показать крутилку при загрузке страницы\r\n        followingInProgress: usersSelectorsSimple.getFollowingInProgress(state), // селектор followingInProgress - массив на кого мы подписались, кнопка неактивна\r\n        isAuth: usersSelectorsSimple.getIsAuth(state), // селектор isAuth - флаг авторизации\r\n        term: state.usersPage.term,\r\n        myID: state.auth.myID,\r\n    }\r\n}\r\n\r\nexport let UsersContainer = connect(mapStateToProps,\r\n    { setCurrentPage,\r\n        getUsersThunkCreator, followThunkCreator, unfollowThunkCreator, setTerm})(UsersAPI);\r\n\r\n//export default UsersContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {UsersContainer} from \"./UsersContainer\";\r\n// эта компонента нужна только для того чтобы заработал lazy импорт,\r\n// который работает не с именного импорта, а только с импорта по умолчанию\r\nconst ExportDefaultUsersContainer = () => {\r\n    return <UsersContainer/>\r\n}\r\nexport default ExportDefaultUsersContainer\r\n"],"names":["totalUsersCount","pageSize","currentPage","onPageChanged","PortionSize","currentRangeLocal","onChangeRangeLocal","useState","mouseHovered","setMouseHovered","PagesCount","Math","ceil","pages","i","push","PortionSizeLeft","PortionSizeRight","renderSlicedPages","filter","p","map","onMouseLeave","onClick","onMouseOver","className","classes","disabled","FindUsers","React","users","followingInProgress","unfollowAPI","isAuth","followAPI","SetTermFunction","onChangeTerm","onChangeTermFunction","myID","error","setError","message","bedug_mode","console","log","FollowUnfollowButtons","u","followUnfollowAPICallback","buttonText","some","id","alert","UserItems","to","alt","src","photos","small","userPhoto","followed","name","status","paginationRender","inputButtonRender","value","onChange","event","onBlur","placeholder","autoFocus","e","preventDefault","ScrollContainer","child","height","window","screen","availHeight","firstInsideContainer","secondInsideContainer","containerElement","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","usersSelectorsSimple","state","usersPage","isFetching","auth","getUsersReselect","UsersAPI","props","setState","currentTarget","rangeShift","setTerm","setPage","setCurrentPage","getUsersThunkCreator","term","followThunkCreator","unfollowThunkCreator","this","prevProps","prevState","snapshot","Preloader","UsersContainer","connect"],"sourceRoot":""}