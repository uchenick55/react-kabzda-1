{"version":3,"file":"static/js/164.3de9f80f.chunk.js","mappings":"gSAQIA,EAAkB,CAClBC,WAAY,IAEZC,EAAqBC,EAAAA,GAAW,CAAE,GA+DtC,EA5DuB,SAAH,GAAwB,IAAnBC,EAAY,EAAZA,aAMrB,OAAQ,0BACA,SAAC,KAAM,CACHC,cAAeL,EACfM,iBAAkBJ,EAClBK,SATO,SAACC,EAAO,GAAkB,IAAhBC,EAAS,EAATA,UACzBL,EAAaI,GACbC,GACJ,EAMiC,SAGpB,YACgB,EAAXC,YAAW,OAEb,SAAC,KAAI,WACD,0BACI,4BACI,SAAC,KAAY,CACTC,MAAM,8CACNC,KAAK,OACLC,KAAK,OACLC,YAAY,qBACZC,gBAAgB,UAIpB,SAAC,KAAY,CACTJ,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,gBAAgB,UAEhB,SAAC,KAAY,CACTJ,MAAM,0DACNC,KAAK,UACLC,KAAK,WACLC,YAAY,yDAEZC,gBAAgB,UAExB,SAACC,EAAA,EAAG,CAACC,UAAU,OAAM,UAErB,UAACC,EAAA,EAAM,CAACL,KAAK,SAAQ,UAAC,IAA6B,oBAOxD,KAM3B,E,8BC9DA,EAVwB,WACpB,OAAQ,0BACJ,yBAAG,uTAA2D,KAC1D,cAAGM,KAAK,mCAAkC,SAAC,wEAAgB,MAAE,kBAAK,qBACjD,kBAAK,8BACI,sBAGtC,ECkCA,EAnCiB,SAAH,GAA2D,IAAtDf,EAAY,EAAZA,aAAcgB,EAAc,EAAdA,eAAgBC,EAAiB,EAAjBA,kBAE7C,GAAwBC,EAAAA,EAAAA,YAAWD,GAAkB,eAA9CE,EAAI,KAAEC,EAAO,KAEpB,GAAIJ,EAAgB,CAChB,IAAMK,GAAc,yBAAK,gDACnBC,GAAY,yBAAMN,IAKxB,OAAO,0BACH,SAACO,EAAA,EAAQ,CACLJ,KAAMA,EACNC,QAASA,EAETC,YAAaA,EACbC,UAAWA,EACXE,cAXc,WAClBP,EAAkB,GACtB,EAUQQ,WAAY,gDAGxB,CAEA,OAAO,4BACH,eAAIZ,UAAWa,EAAAA,EAAAA,WAAyB,SAAC,cACzC,UAACC,EAAA,EAAS,CAACC,OAAK,aACZ,SAAC,EAAc,CAAC5B,aAAcA,KAC9B,gBAAKa,UAAU,OAAM,UAAC,SAAC,EAAiB,WAKpD,ECnCMgB,EAAiB,qJAIlB,OAJkB,oCAEnB7B,aAAe,SAAC8B,GACZ,EAAKC,MAAMC,0BAA0BF,EACzC,EAAC,EAUA,OAVA,8BAED,WACI,OAAO,0BACH,SAAC,EAAQ,CACL9B,aAAciC,KAAKjC,aACnBgB,eAAgBiB,KAAKF,MAAMf,eAC3BC,kBAAmBgB,KAAKF,MAAMd,qBAG1C,KAAC,EAdkB,CAASiB,EAAAA,WAuBhC,GAAeC,EAAAA,EAAAA,KANO,SAACC,GACnB,MAAO,CACHpB,eAAgBoB,EAAMC,SAASrB,eAEvC,GAGI,CAACgB,0BAAAA,EAAAA,GAA2Bf,kBAAAA,EAAAA,IADhC,CACoDY,E","sources":["components/FeedBack/FeedBackFormik/FeedBackFormik.jsx","components/Info/FeedBackInfoShort.jsx","components/FeedBack/FeedBackBS.jsx","components/FeedBack/FeedBackContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {Formik, Form} from \"formik\"; //формик с компонентами и пользовательским хуком\r\nimport * as Yup from 'yup' // валидация форм с помошью сторонней библиотеки Yup\r\n//import DisplayFormikState from \"../../common/formikCommon/DisplayFormikState\"\r\nimport {MyTextInput} from \"../../common/formikCommon/MyFieldsBS\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nlet myInitialValues = { // начальные зачения форм\r\n    newMessage: \"\",\r\n}\r\nlet myValidationSchema = Yup.object({ // валидация форм на required, длину и заполнение полей\r\n})\r\n\r\nconst FeedBackFormik = ({sendFeedBack}) => { // основная компонента с входным колбэком, чтобы забрать данные с форм\r\n    const myOnSubmit = (values, {resetForm}) => { // действия по сабмиту\r\n        sendFeedBack(values) // колбек, который принмает результат ввода формы\r\n        resetForm()// сбросить значение формы после ввода\r\n    }\r\n\r\n    return (<div>\r\n            <Formik\r\n                initialValues={myInitialValues}\r\n                validationSchema={myValidationSchema}\r\n                onSubmit={myOnSubmit}\r\n            >\r\n\r\n                {({\r\n                      handleReset,// обнуление полей\r\n                  }) => ( // обертка для вывода значений ввода в любом месте формы паралельно (или в итоге)\r\n                    <Form>\r\n                        <div>\r\n                            <div>\r\n                                <MyTextInput // сообщение в MyPostsBS\r\n                                    label=\"Ваше имя\"\r\n                                    name='name'\r\n                                    type='text'\r\n                                    placeholder='имя'\r\n                                    leftLabelLength='7rem'\r\n\r\n                                />\r\n\r\n                                <MyTextInput // email\r\n                                    label=\"Email\"\r\n                                    name='email'\r\n                                    type='email'\r\n                                    placeholder='email'\r\n                                    leftLabelLength='7rem'\r\n                                />\r\n                                    <MyTextInput // сообщение в MyPostsBS\r\n                                        label=\"Сообщение*\"\r\n                                        name='message'\r\n                                        type='textarea'\r\n                                        placeholder='сообщение'\r\n                                      //  autoFocus={true}\r\n                                        leftLabelLength='7rem'\r\n                                    />\r\n                                <Row className=\"mx-1\">\r\n\r\n                                <Button type=\"submit\"> {/*кнопка отправить форму*/}\r\n                                        Submit\r\n                                    </Button>\r\n                                </Row>\r\n                            </div>\r\n                        </div>\r\n                        {/* <DisplayFormikState/> {/*отображение всего стейта формика*/}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FeedBackFormik\r\n\r\n","let FeedBackInfoShort = () => {\r\n    return (<div>\r\n        <p>Проверить отправку почты можно на тестовом почтовом ящике {\" \"}\r\n            <a href=\"https://passport.yandex.ru/auth/\">яндекс почты</a>: <br/>\r\n            testfeedback2023 <br/>\r\n            testfeedback2023_password <br/>\r\n        </p>\r\n    </div>)\r\n}\r\n\r\nexport default FeedBackInfoShort\r\n","import React, {useState} from \"react\";\r\nimport FeedBackFormik from \"./FeedBackFormik/FeedBackFormik\";\r\nimport commonClasses from \"../common/CommonClasses/common.module.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport ModalBS1 from \"../common/ModalBS/ModalBS1\";\r\nimport FeedBackInfoShort from \"../Info/FeedBackInfoShort\";\r\n\r\nconst FeedBack = ({sendFeedBack, feedBackStatus, setFeedBackStatus}) => {\r\n\r\n    const [show, setShow] = useState(!!setFeedBackStatus); // хук задания флага показать ли модальное окно\r\n\r\n    if (feedBackStatus) { // если статус feedback из BLL не пустой\r\n        const modalHeader = <div>Спасибо!</div>\r\n        const modalBody = <div>{feedBackStatus}</div>\r\n        const buttonOnClick = () => {\r\n            setFeedBackStatus(\"\")\r\n        }\r\n\r\n        return <div>\r\n            <ModalBS1\r\n                show={show} // флаг показать ли модальное окно\r\n                setShow={setShow} // колбек смены флага показать модальное окно\r\n\r\n                modalHeader={modalHeader} // заголовок модального окна\r\n                modalBody={modalBody} // тело модального окна\r\n                buttonOnClick={buttonOnClick} // действие по кнопке модального окна\r\n                buttonName={\"Закрыть\"} // текст кнопки\r\n            />\r\n        </div>\r\n    }\r\n\r\n    return <div>\r\n        <h2 className={commonClasses.pageHeader}>FeedBack</h2>\r\n        <Container fluid>\r\n            <FeedBackFormik sendFeedBack={sendFeedBack}/>\r\n            <div className='my-3'><FeedBackInfoShort/></div>\r\n\r\n        </Container>\r\n    </div>\r\n\r\n};\r\n\r\nexport default FeedBack;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {postFeedBackThunkCreator2, setFeedBackStatus} from \"../../redux/feedback-reducer\";\r\nimport FeedBack from \"./FeedBackBS\";\r\n\r\nclass FeedBackContainer extends React.Component {\r\n\r\n    sendFeedBack = (data) => {\r\n        this.props.postFeedBackThunkCreator2(data)// отправка фидбека из api\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <FeedBack\r\n                sendFeedBack={this.sendFeedBack} // колбек отправки сообщения из контейнера\r\n                feedBackStatus={this.props.feedBackStatus} // фидбэк статус из BLL\r\n                setFeedBackStatus={this.props.setFeedBackStatus} // задать статус (обнулить для отправки нового сообщения)\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        feedBackStatus: state.feedback.feedBackStatus // статус отправки сообщения на сервер\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {postFeedBackThunkCreator2, setFeedBackStatus})(FeedBackContainer);\r\n"],"names":["myInitialValues","newMessage","myValidationSchema","Yup","sendFeedBack","initialValues","validationSchema","onSubmit","values","resetForm","handleReset","label","name","type","placeholder","leftLabelLength","Row","className","Button","href","feedBackStatus","setFeedBackStatus","useState","show","setShow","modalHeader","modalBody","ModalBS1","buttonOnClick","buttonName","commonClasses","Container","fluid","FeedBackContainer","data","props","postFeedBackThunkCreator2","this","React","connect","state","feedback"],"sourceRoot":""}