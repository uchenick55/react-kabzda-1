{"version":3,"file":"static/js/559.37270a5a.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","components/FeedBack/FeedBackFormik/FeedBackFormik.jsx","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","components/FeedBack/ModalBS/ModalBS1.jsx","components/Info/FeedBackInfoShort.jsx","components/FeedBack/FeedBackBS.jsx","components/FeedBack/FeedBackContainer.jsx"],"sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import React from \"react\";\nimport {Formik, Form} from \"formik\"; //формик с компонентами и пользовательским хуком\nimport * as Yup from 'yup' // валидация форм с помошью сторонней библиотеки Yup\n//import DisplayFormikState from \"../../common/formikCommon/DisplayFormikState\"\nimport {MyTextInput} from \"../../common/formikCommon/MyFieldsBS\"\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\n\nlet myInitialValues = { // начальные зачения форм\n    newMessage: \"\",\n}\nlet myValidationSchema = Yup.object({ // валидация форм на required, длину и заполнение полей\n})\n\nconst FeedBackFormik = ({sendFeedBack}) => { // основная компонента с входным колбэком, чтобы забрать данные с форм\n    const myOnSubmit = (values, {resetForm}) => { // действия по сабмиту\n        sendFeedBack(values) // колбек, который принмает результат ввода формы\n        resetForm()// сбросить значение формы после ввода\n    }\n\n    return (<div>\n            <Formik\n                initialValues={myInitialValues}\n                validationSchema={myValidationSchema}\n                onSubmit={myOnSubmit}\n            >\n\n                {({\n                      handleReset,// обнуление полей\n                  }) => ( // обертка для вывода значений ввода в любом месте формы паралельно (или в итоге)\n                    <Form>\n                        <div>\n                            <div>\n                                <MyTextInput // сообщение в MyPostsBS\n                                    label=\"Ваше имя\"\n                                    name='name'\n                                    type='text'\n                                    placeholder='имя'\n                                    leftLabelLength='7rem'\n\n                                />\n\n                                <MyTextInput // email\n                                    label=\"Email\"\n                                    name='email'\n                                    type='email'\n                                    placeholder='email'\n                                    leftLabelLength='7rem'\n                                />\n                                    <MyTextInput // сообщение в MyPostsBS\n                                        label=\"Сообщение*\"\n                                        name='message'\n                                        type='textarea'\n                                        placeholder='сообщение'\n                                      //  autoFocus={true}\n                                        leftLabelLength='7rem'\n                                    />\n                                <Row className=\"mx-1\">\n\n                                <Button type=\"submit\"> {/*кнопка отправить форму*/}\n                                        Submit\n                                    </Button>\n                                </Row>\n                            </div>\n                        </div>\n                        {/* <DisplayFormikState/> {/*отображение всего стейта формика*/}\n                    </Form>\n                )}\n            </Formik>\n        </div>\n\n    )\n}\n\nexport default FeedBackFormik\n\n","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction ModalBS1 ({show, setShow, modalHeader, modalBody, buttonOnClick, buttonName}) {\n\n    const localAction = () => {\n        setShow(false)\n        buttonOnClick()\n    }\n\n    return (\n        <>\n\n            <Modal show={show} onHide={()=>{setShow(false)}}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modalHeader}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{modalBody}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={localAction}>\n                        {buttonName}\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default ModalBS1\n","let FeedBackInfoShort = () => {\n    return (<div>\n        <p>Проверить отправку почты можно на тестовом почтовом ящике {\" \"}\n            <a href=\"https://passport.yandex.ru/auth/\">яндекс почты</a>: <br/>\n            testfeedback2023 <br/>\n            testfeedback2023_password <br/>\n        </p>\n    </div>)\n}\n\nexport default FeedBackInfoShort\n","import React, {useState} from \"react\";\nimport FeedBackFormik from \"./FeedBackFormik/FeedBackFormik\";\nimport commonClasses from \"../common/CommonClasses/common.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport ModalBS1 from \"./ModalBS/ModalBS1\";\nimport FeedBackInfoShort from \"../Info/FeedBackInfoShort\";\n\nconst FeedBack = ({sendFeedBack, feedBackStatus, setFeedBackStatus}) => {\n\n    const [show, setShow] = useState(!!setFeedBackStatus); // хук задания флага показать ли модальное окно\n\n    if (feedBackStatus) { // если статус feedback из BLL не пустой\n        const modalHeader = <div>Спасибо!</div>\n        const modalBody = <div>{feedBackStatus}</div>\n        const buttonOnClick = () => {\n            setFeedBackStatus(\"\")\n        }\n\n        return <div>\n            <ModalBS1\n                show={show} // флаг показать ли модальное окно\n                setShow={setShow} // колбек смены флага показать модальное окно\n\n                modalHeader={modalHeader} // заголовок модального окна\n                modalBody={modalBody} // тело модального окна\n                buttonOnClick={buttonOnClick} // действие по кнопке модального окна\n                buttonName={\"Закрыть\"} // текст кнопки\n            />\n        </div>\n    }\n\n    return <div>\n        <h2 className={commonClasses.pageHeader}>FeedBack</h2>\n        <Container fluid>\n            <FeedBackFormik sendFeedBack={sendFeedBack}/>\n            <div className='my-3'><FeedBackInfoShort/></div>\n\n        </Container>\n    </div>\n\n};\n\nexport default FeedBack;\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {postFeedBackThunkCreator2, setFeedBackStatus} from \"../../redux/feedback-reducer\";\nimport FeedBack from \"./FeedBackBS\";\n\nclass FeedBackContainer extends React.Component {\n\n    sendFeedBack = (data) => {\n        this.props.postFeedBackThunkCreator2(data)// отправка фидбека из api\n    }\n\n    render () {\n        return <div>\n            <FeedBack\n                sendFeedBack={this.sendFeedBack} // колбек отправки сообщения из контейнера\n                feedBackStatus={this.props.feedBackStatus} // фидбэк статус из BLL\n                setFeedBackStatus={this.props.setFeedBackStatus} // задать статус (обнулить для отправки нового сообщения)\n            />\n        </div>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        feedBackStatus: state.feedback.feedBackStatus // статус отправки сообщения на сервер\n    }\n}\n\nexport default connect(mapStateToProps,\n    {postFeedBackThunkCreator2, setFeedBackStatus})(FeedBackContainer);\n"],"names":["size","myInitialValues","newMessage","myValidationSchema","Yup","sendFeedBack","initialValues","validationSchema","onSubmit","values","resetForm","handleReset","label","name","type","placeholder","leftLabelLength","Row","className","Button","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","contentClassName","centered","fullscreen","children","scrollable","props","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","closeButton","DivStyledAsH4","divWithClassName","Component","show","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","Dialog","ariaLabelledby","ariaDescribedby","ariaLabel","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","useState","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","window","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","value","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","setShow","modalHeader","modalBody","buttonOnClick","buttonName","variant","href","feedBackStatus","setFeedBackStatus","commonClasses","Container","fluid","FeedBackContainer","data","postFeedBackThunkCreator2","this","connect","state","feedback"],"sourceRoot":""}