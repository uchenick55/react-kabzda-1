{"version":3,"file":"static/js/256.b5472f6b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/DialogList/DialogList.module.css?a68d","components/DialogList/DialogItem.jsx","webpack://my-app/./src/components/DialogList/Messages/Message/Message.module.css?536c","../node_modules/bootstrap/js/src/util/index.js","../node_modules/bootstrap/js/src/dom/event-handler.js","../node_modules/bootstrap/js/src/dom/data.js","../node_modules/bootstrap/js/src/dom/manipulator.js","../node_modules/bootstrap/js/src/util/config.js","../node_modules/bootstrap/js/src/base-component.js","../node_modules/bootstrap/js/src/button.js","../node_modules/@restart/hooks/esm/useTimeout.js","../node_modules/react-bootstrap/esm/ToastFade.js","../node_modules/react-bootstrap/esm/ToastContext.js","../node_modules/react-bootstrap/esm/ToastHeader.js","../node_modules/react-bootstrap/esm/ToastBody.js","../node_modules/react-bootstrap/esm/Toast.js","components/DialogList/Messages/Message/MessageBS.jsx","components/DialogList/Messages/Message/MessagesElements.jsx","assets/images/swg/send-svg2.svg","webpack://my-app/./src/components/DialogList/Messages/MessagesFormik/Dialog.module.css?4d1e","components/DialogList/Messages/MessagesFormik/DialogFormik.jsx","components/DialogList/Messages/MessagesRender.jsx","components/DialogList/Messages/MessagesContainer.jsx","components/DialogList/DialogList.jsx","components/DialogList/DialogListContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogList\":\"DialogList_dialogList__OAyfE\",\"dialogListHeader\":\"DialogList_dialogListHeader__r-d2s\",\"messagesHeader\":\"DialogList_messagesHeader__pDFpd\",\"knopka\":\"DialogList_knopka__uJ-qW\",\"dialogItemGreed\":\"DialogList_dialogItemGreed__D2-cZ\",\"dialog\":\"DialogList_dialog__T3CKZ\",\"dialogCurrent\":\"DialogList_dialogCurrent__ZenxF\",\"dialogImg\":\"DialogList_dialogImg__0wTiE\",\"FieldLeft\":\"DialogList_FieldLeft__q14p-\",\"buttonRight\":\"DialogList_buttonRight__BKC4M\",\"FieldButtonGreed\":\"DialogList_FieldButtonGreed__qaiyu\",\"dialogContainer\":\"DialogList_dialogContainer__6BqIM\",\"x\":\"DialogList_x__PwR4a\",\"BgStyle\":\"DialogList_BgStyle__2iEaj\",\"inputFixed\":\"DialogList_inputFixed__xsJy-\",\"photoFixed\":\"DialogList_photoFixed__KaeYd\",\"userPhoto\":\"DialogList_userPhoto__0CLsE\",\"linkNoDecoration\":\"DialogList_linkNoDecoration__hNHxk\"};","import React from 'react';\nimport classes from './DialogList.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport x from \"../../assets/images/x.png\";\nimport {PointerCursor} from \"../Dark_light_theme/globalStyles\";\n\n\nconst DialogItem = ({deleteDialog, dialogId, userPhoto, userName, userId, dialogUserID}) => {\n\n    const DialogNamePhotoRender = <NavLink to={'/dialogs/' + userId}> {/*навигация на диалог*/}\n        {/*отдельно вынес отрисовку фото и имени пользователя со сменой URL*/}\n        <div className={classes.knopka}>\n            <div className={classes.dialogList}>{/* Разделение фото и имени*/}\n                <div>\n                    <img src={userPhoto} alt={\"userPhoto\"} className={classes.dialogImg}/> {/*Фото диалога*/}\n                </div>\n                <div>\n                    <div>{userName}</div>\n                    {/*имя*/}\n                </div>\n            </div>\n        </div>\n    </NavLink>\n\n    const deleteDialogRender = <PointerCursor> {/*вынес отдельно кнопку удаления диалога из диалоглиста*/}\n        <img src={x} alt={\"Удалить из своего диалогЛиста\"} className={classes.x}\n             onClick={() => {\n                 deleteDialog(dialogId, userId)\n             }} title={\"Удалить из своего диалогЛиста\"}/>\n    </PointerCursor>\n\n    return <div className={userId === dialogUserID ? classes.dialogCurrent : classes.dialog}>\n        <div className={classes.dialogItemGreed}>  {/*разделение фото имени с кнопкой закрытия диалога в диалогЛисте*/}\n            <div>\n                {DialogNamePhotoRender} {/*отдельно вынес отрисовку фото и имени пользователя со сменой URL*/}\n            </div>\n            <div>\n                {deleteDialogRender} {/*вынес отдельно кнопку удаления диалога из диалоглиста*/}\n            </div>\n        </div>\n    </div>\n}\n\nexport default DialogItem;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"messageCommon\":\"Message_messageCommon__qMUdJ\",\"timeStyle\":\"Message_timeStyle__X9YMc\",\"x\":\"Message_x__YcLwm\",\"messageswrapper\":\"Message_messageswrapper__Px3CS\",\"messagesCommon\":\"Message_messagesCommon__y3ALJ\",\"messageMyId\":\"Message_messageMyId__2lyA3\",\"messageNotMyId\":\"Message_messageNotMyId__wlQ5a\",\"insideToastMy\":\"Message_insideToastMy__uNjRB\",\"insideToastNotMy\":\"Message_insideToastNotMy__Z0gRy\",\"time\":\"Message_time__A+UPN\",\"closeButton\":\"Message_closeButton__YmmdJ\"};","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-bs-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector\n}\n\nconst getSelectorFromElement = element => {\n  const selector = getSelector(element)\n\n  if (selector) {\n    return document.querySelector(selector) ? selector : null\n  }\n\n  return null\n}\n\nconst getElementFromSelector = element => {\n  const selector = getSelector(element)\n\n  return selector ? document.querySelector(selector) : null\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(object)\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-bs-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = callback => {\n  if (typeof callback === 'function') {\n    callback()\n  }\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition,\n  findShadowRoot,\n  getElement,\n  getElementFromSelector,\n  getjQuery,\n  getNextActiveElement,\n  getSelectorFromElement,\n  getTransitionDurationFromElement,\n  getUID,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop,\n  onDOMContentLoaded,\n  reflow,\n  triggerTransitionEnd,\n  toType\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // todo: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const handlerKey of Object.keys(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      const event = storeElementEvent[handlerKey]\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const keyHandlers of Object.keys(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        const event = storeElementEvent[keyHandlers]\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    let evt = new Event(event, { bubbles, cancelable: true })\n    evt = hydrateObj(evt, args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta) {\n  for (const [key, value] of Object.entries(meta || {})) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-bs-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-bs-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const bsKeys = Object.keys(element.dataset).filter(key => key.startsWith('bs') && !key.startsWith('bsConfig'))\n\n    for (const key of bsKeys) {\n      let pureKey = key.replace(/^bs/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1, pureKey.length)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-bs-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isElement, toType } from './index'\nimport Manipulator from '../dom/manipulator'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const property of Object.keys(configTypes)) {\n      const expectedTypes = configTypes[property]\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport { executeAfterTransition, getElement } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Config from './util/config'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.2.3'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n","import { useMemo, useRef } from 'react';\nimport useMounted from './useMounted';\nimport useWillUnmount from './useWillUnmount';\n/*\n * Browsers including Internet Explorer, Chrome, Safari, and Firefox store the\n * delay as a 32-bit signed integer internally. This causes an integer overflow\n * when using delays larger than 2,147,483,647 ms (about 24.8 days),\n * resulting in the timeout being executed immediately.\n *\n * via: https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\n */\n\nvar MAX_DELAY_MS = Math.pow(2, 31) - 1;\n\nfunction setChainedTimeout(handleRef, fn, timeoutAtMs) {\n  var delayMs = timeoutAtMs - Date.now();\n  handleRef.current = delayMs <= MAX_DELAY_MS ? setTimeout(fn, delayMs) : setTimeout(function () {\n    return setChainedTimeout(handleRef, fn, timeoutAtMs);\n  }, MAX_DELAY_MS);\n}\n/**\n * Returns a controller object for setting a timeout that is properly cleaned up\n * once the component unmounts. New timeouts cancel and replace existing ones.\n *\n *\n *\n * ```tsx\n * const { set, clear } = useTimeout();\n * const [hello, showHello] = useState(false);\n * //Display hello after 5 seconds\n * set(() => showHello(true), 5000);\n * return (\n *   <div className=\"App\">\n *     {hello ? <h3>Hello</h3> : null}\n *   </div>\n * );\n * ```\n */\n\n\nexport default function useTimeout() {\n  var isMounted = useMounted(); // types are confused between node and web here IDK\n\n  var handleRef = useRef();\n  useWillUnmount(function () {\n    return clearTimeout(handleRef.current);\n  });\n  return useMemo(function () {\n    var clear = function clear() {\n      return clearTimeout(handleRef.current);\n    };\n\n    function set(fn, delayMs) {\n      if (delayMs === void 0) {\n        delayMs = 0;\n      }\n\n      if (!isMounted()) return;\n      clear();\n\n      if (delayMs <= MAX_DELAY_MS) {\n        // For simplicity, if the timeout is short, just set a normal timeout.\n        handleRef.current = setTimeout(fn, delayMs);\n      } else {\n        setChainedTimeout(handleRef, fn, Date.now() + delayMs);\n      }\n    }\n\n    return {\n      set: set,\n      clear: clear\n    };\n  }, []);\n}","import * as React from 'react';\nimport { ENTERING, EXITING } from 'react-transition-group/Transition';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'showing',\n  [EXITING]: 'showing show'\n};\nconst ToastFade = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(Fade, {\n  ...props,\n  ref: ref,\n  transitionClasses: fadeStyles\n}));\nToastFade.displayName = 'ToastFade';\nexport default ToastFade;","import * as React from 'react';\nconst ToastContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onClose() {}\n});\nexport default ToastContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CloseButton from './CloseButton';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: true\n};\nconst ToastHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  closeLabel,\n  closeVariant,\n  closeButton,\n  className,\n  children,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast-header');\n  const context = useContext(ToastContext);\n  const handleClick = useEventCallback(e => {\n    context == null ? void 0 : context.onClose == null ? void 0 : context.onClose(e);\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    className: classNames(bsPrefix, className),\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick,\n      \"data-dismiss\": \"toast\"\n    })]\n  });\n});\nToastHeader.displayName = 'ToastHeader';\nToastHeader.defaultProps = defaultProps;\nexport default ToastHeader;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('toast-body');","import * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});","import React from 'react';\r\nimport classes from './Message.module.css';\r\nimport x from \"../../../../assets/images/x.png\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from \"bootstrap/js/src/button\";\r\nimport Toast from 'react-bootstrap/Toast'\r\nimport CloseButton from \"react-bootstrap/CloseButton\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst Message = ({message, myId, userId, Date, MessageId, deleteMessage}) => {\r\n\r\n    let onMouseOverAction = () => {\r\n\r\n    }\r\n    return <div> {/*className={classes.messageswrapper}разделить сообщения на мои и собеседника поровну (право-лево)*/}\r\n        <div\r\n            className={`${classes.messagesCommon} ${myId === userId ? classes.messageMyId : classes.messageNotMyId}`}>\r\n            {/*в зависимости от того кто пишет, доп стили к тексту*/}\r\n\r\n            <Toast className={myId === userId ?classes.insideToastMy:classes.insideToastNotMy}>\r\n                <Toast.Body>\r\n                    <div className='d-flex d-inline-block'>\r\n                        <big>{message} {/*сообщение */}</big>\r\n                        <div className={classes.time}>\r\n                            {Date.Hour}{\":\"}{Date.Minutes}\r\n                        </div>\r\n                            <CloseButton className={classes.closeButton}\r\n                                onClick={()=>{deleteMessage(MessageId)}}\r\n                            />\r\n                    </div>\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Message;\r\n\r\n","import Message from \"./MessageBS\";\nimport React from \"react\";\n\nlet MessagesElements = ({messages2, myId, deleteMessage}) => messages2.map((m) => // подкомпонента отрисовки всех сообщений через map\n    <Message key={m.id+m.message} message={m.message} myId={myId} userId={m.userId} Date={m.Date} MessageId={m.id}\n             deleteMessage={deleteMessage}/>);\n\nexport default MessagesElements\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSendSvg2(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 70 70\",\n    enableBackground: \"new 0 0 70 70\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.909,5.596c-0.641-0.409-1.462-0.42-2.11-0.026L4.133,41.638c-0.676,0.408-1.048,1.176-0.95,1.958 c0.097,0.783,0.646,1.436,1.399,1.666l18.664,5.707l2.445,12.145c0.142,0.701,0.646,1.273,1.324,1.501 c0.208,0.07,0.423,0.104,0.637,0.104c0.48,0,0.954-0.174,1.325-0.502l9.658-8.542l19.824,6.062 c0.191,0.059,0.389,0.088,0.585,0.088c0.387,0,0.77-0.112,1.1-0.329c0.497-0.328,0.823-0.86,0.889-1.452L66.821,7.5 C66.904,6.744,66.551,6.006,65.909,5.596z M28.928,58.921l-1.333-6.623l6.555,2.005L28.928,58.921z M57.321,57.206l-24.833-7.593 l20.105-23.584c0.358-0.42,0.309-1.051-0.112-1.409c-0.419-0.359-1.052-0.309-1.409,0.112L30.405,48.976l-20.373-6.229 l52.369-31.658L57.321,57.206z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.524,39.707c0.042,0.006,0.083,0.008,0.124,0.008c0.498,0,0.929-0.371,0.991-0.877l0.186-1.5 c0.068-0.549-0.321-1.048-0.869-1.115c-0.547-0.073-1.047,0.322-1.115,0.869l-0.186,1.5C54.587,39.141,54.977,39.64,55.524,39.707z \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.191,50.396c0.048,0.007,0.096,0.01,0.143,0.01c0.489,0,0.917-0.359,0.989-0.858l0.959-6.691 c0.078-0.547-0.302-1.053-0.849-1.132c-0.542-0.077-1.052,0.302-1.132,0.849l-0.959,6.691 C53.265,49.812,53.645,50.317,54.191,50.396z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSendSvg2);\nexport default __webpack_public_path__ + \"static/media/send-svg2.bf250e69b5830be8d34d1dd3f2cbf9ac.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"legendStyle\":\"Dialog_legendStyle__fzS7X\",\"fieldSetStyle\":\"Dialog_fieldSetStyle__IEFn0\",\"sendSwg\":\"Dialog_sendSwg__vWWca\"};","import React from \"react\";\r\nimport {Formik, Form} from \"formik\"; //формик с компонентами и пользовательским хуком\r\nimport * as Yup from 'yup' // валидация форм с помошью сторонней библиотеки Yup\r\n//import DisplayFormikState from \"../../common/formikCommon/DisplayFormikState\"\r\nimport {MyTextInput} from \"../../../common/formikCommon/MyFieldsBS\"\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport sendSwg from \"../../../../assets/images/swg/send-svg2.svg\"\r\nimport classes from \"./Dialog.module.css\"\r\n\r\nlet myInitialValues = { // начальные зачения форм\r\n    newMessage: \"\",\r\n}\r\nlet myValidationSchema = Yup.object({ // валидация форм на required, длину и заполнение полей\r\n})\r\n\r\nconst DialogFormik = ({sendMessage, scrollBottom}) => { // основная компонента с входным колбэком, чтобы забрать данные с форм\r\n    const myOnSubmit = (values, {resetForm}) => { // действия по сабмиту\r\n        sendMessage(values.newMessage) // колбек, который принмает результат ввода формы\r\n        resetForm()// сбросить значение формы после ввода\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={myInitialValues}\r\n                validationSchema={myValidationSchema}\r\n                onSubmit={myOnSubmit}\r\n            >\r\n                {({\r\n                      handleReset,// обнуление полей\r\n                    values,\r\n                  }) => ( // обертка для вывода значений ввода в любом месте формы паралельно (или в итоге)\r\n                    <Form>\r\n                        <div className='d-flex d-inline-block justify-content-center align-items-center'>\r\n                            <div  className='col-9'>\r\n                                <MyTextInput // сообщение в MyPostsBS\r\n                                    label=\"\"\r\n                                    name='newMessage'\r\n                                    type='text'\r\n                                    placeholder='Введите ваше сообщение'\r\n                                    autoFocus={true}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Button variant={\"light\"} className={\"mx-2\"}\r\n                                        type=\"submit\" //кнопка отправить форму\r\n                                        onClick={scrollBottom} /*прокрутка вниз при добавлении нового сообщения*/\r\n                                        disabled={!values.newMessage} //скрыть кнопку отправки если нет текста на отправку\r\n                                >\r\n\r\n                                    <Image src={sendSwg} className={classes.sendSwg} alt={'Отправить сообщение'}\r\n                                           title={'Отправить сообщение'}/>\r\n                                </Button>\r\n                            </div>\r\n{/*\r\n                            <div><Button onClick={()=>{history.back()}}>Prev</Button></div>\r\n*/}\r\n                        </div>\r\n                        {/* <DisplayFormikState/> {/*отображение всего стейта формика*/}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogFormik\r\n\r\n","import classes from \"../DialogList.module.css\";\nimport userPhoto from \"../../../assets/images/no-image3.png\";\nimport MessagesElements from \"./Message/MessagesElements\";\nimport DialogFormik from \"./MessagesFormik/DialogFormik\";\nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport {Navigate, NavLink} from \"react-router-dom\";\n\nconst MessagesRender = ({messages2, myId, deleteMessage, sendMessage, scrollBottom, profilePage}) => {\n\n    const messagesProfileRender = <div className={classes.photoFixed}>\n        {/*спозиционированный сверху иконку человека, с кем общаюсь*/}\n        {profilePage.profile &&  // если профиль пользователя уже загружен\n        <NavLink to={`/profile/${profilePage.profile.userId}`}> {/*при клике переход на профиль собеседника*/}\n            <Image // картинка аватар собеседника\n                src={profilePage.profile.photos.small?profilePage.profile.photos.small:userPhoto}\n                className={classes.userPhoto}\n                title={\"Перейти в профиль\"}\n                alt={\"Перейти в профиль\"}\n            />\n            <span className={classes.linkNoDecoration}>{profilePage.profile.fullName}</span>\n        </NavLink>\n        }\n    </div>\n\n    return <div className={classes.BgStyle}>\n        <Row>\n            <MessagesElements // отрисовка сообщений\n                messages2={messages2} // сообщения\n                myId={myId} // мой ID\n                deleteMessage={deleteMessage} // функйцию удаления сообщений\n            />\n        </Row>\n\n        {messagesProfileRender}\n        {/*спозиционированная полоска сверку сообщений с иконкой собеседникой и ссылкой на его профиль*/}\n\n        <div className={classes.inputFixed}> {/*спозиционированный снизу инпут и кнопка ввода сообщений*/}\n            <div>\n                <DialogFormik\n                    sendMessage={sendMessage}\n                    scrollBottom={scrollBottom}\n                /> {/*вызов формы сообщений*/}\n            </div>\n        </div>\n\n    </div>\n}\nexport default MessagesRender\n","import React from 'react';\r\nimport {\r\n    deleteMessageThunkCreator,\r\n    sendDialogsThunkCreator,\r\n    updateDialogListThunkCreator\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport withRouter2 from \"../../hoc/withRouter2\";\r\nimport MessagesRender from \"./MessagesRender\";\r\n\r\nclass MessagesContainer extends React.Component {\r\n\r\n    sendMessage = (NewMessage) => { // отправка сообщения\r\n        if (!this.props.userId) { // при клике просто по вкладке DialogList\r\n            alert(\"Выберите диалог\") // предупреждение если диалог не выбран\r\n            return\r\n        }\r\n        if (!NewMessage) { // при клике просто по вкладке DialogList\r\n            return // не реагировать на пустые сообщения\r\n        }\r\n\r\n        let profilePage = this.props.profilePage // локальный стейт страницы пользователя\r\n        let userName = 0 // задаем переменную имени пользователя\r\n        let userPhoto = 0 // и его фото для отображения в диалоглисте\r\n        if (profilePage !== null) { // если профиль пользователя уже загружен\r\n            userName = this.props.profilePage.profile.fullName; // переопределить имя пользователя\r\n            userPhoto = this.props.profilePage.profile.photos.small; // и его фото и стейта\r\n        }\r\n\r\n        this.props.sendDialogsThunkCreator( // отправить сообщение\r\n            NewMessage,\r\n            this.props.auth.myId, // мой ID для формирования DialogList собеседника\r\n            this.props.auth.myLogin, // мой логин  для формирования DialogList собеседника\r\n            this.props.auth.myProfile.photos.small, // мое фото  для формирования DialogList собеседника\r\n            this.props.userId, // ID собеседника для формирования моего DialogList\r\n        ); // отправить сообщение\r\n\r\n        this.props.updateDialogListThunkCreator( // обновление диалогЛиста\r\n            this.props.auth.myId, // мой ID\r\n            this.props.userId, // ID с кем веду диалог\r\n            userName, // его имя\r\n            userPhoto // и фото\r\n        )\r\n    }\r\n\r\n    deleteMessage = (messageID) => { // удалить сообщение по его ID в списке\r\n        this.props.deleteMessageThunkCreator(messageID, this.props.myId, this.props.userId);\r\n    }\r\n\r\n    scrollBottom = () => {\r\n        const scrollHeight = Math.max(\r\n            document.body.scrollHeight, document.documentElement.scrollHeight,\r\n            document.body.offsetHeight, document.documentElement.offsetHeight,\r\n            document.body.clientHeight, document.documentElement.clientHeight\r\n        );\r\n        window.scrollTo(0, scrollHeight)\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <MessagesRender\r\n                messages2 ={this.props.messages2}// массив сообщений текущего диалога\r\n                myId={this.props.myId} // мой ID\r\n                deleteMessage = {this.deleteMessage} // удалить сообщение\r\n                sendMessage={this.sendMessage} // проброс местного метода отправки сообщений\r\n                scrollBottom={this.scrollBottom}\r\n                profilePage={this.props.profilePage}\r\n        />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        myId: state.auth.myId, // мой ID (авторизованного пользователя)\r\n        dialogUserID: state.dialogsPage.dialogUserID, // ID пользователя, с кем сейчас идет диалог\r\n        messages2: state.dialogsPage.messages2, // массив сообщений текущего диалога\r\n        profilePage: state.profilePage, // страница профиля пользователя для создания dialogList\r\n        auth: state.auth,// страница моего профиля для создания dialogList\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            sendDialogsThunkCreator,//санкреатор отправки нового сообщения в диалог\r\n            deleteMessageThunkCreator,//санкреатор удаления сообщения из далога\r\n            updateDialogListThunkCreator,//санкреатор обновления диалогЛиста (моего когда я пишу кому то сообщение) - запись в localStorage.\r\n        }\r\n    ),\r\n    withRouter2,// получить данные ID из URL браузера и добавить в пропсы\r\n)\r\n(MessagesContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'; // импорт реакта\r\nimport classes from './DialogList.module.css';// css обработка\r\nimport DialogItem from \"./DialogItem\";// подкомпонента отрисовки диалогов через map\r\nimport ScrollContainer from \"../common/Scroll/ScrollContainer\";\r\nimport userPhotoAva from \"../../assets/images/no-image3.png\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport commonClasses from \"../common/CommonClasses/common.module.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst DialogList = ({deleteDialog, dialogUserID, getDialogList, dialogs2,\r\n                     getDialogLastUpdateTime}) => { // основная компонента отрисовки диалогов\r\n\r\n    let dialogElements = dialogs2.map((d) => // подкомпонента отрисовки всех диалогов через map\r\n        {\r\n            let userPhoto = d.userPhoto ? d.userPhoto : userPhotoAva; // если аватарки с сервера нет, подставить заглушку\r\n            return <DialogItem key={d.userId} userName={d.userName} userId={d.userId}\r\n                               userPhoto={userPhoto} dialogUserID={dialogUserID}\r\n                               deleteDialog={deleteDialog} dialogId={d.dialogId}\r\n            />\r\n        }\r\n    );\r\n\r\n    useEffect(() => { // при очередном ререндере\r\n        const id = setInterval(() => { // задать цикл с интервалом в 1 сек\r\n            getDialogLastUpdateTime() // получить время обновления текущего диалога\r\n            getDialogList()// получить диалогЛист (мне кто то написал, или я начал диалог)\r\n        }, 1000)\r\n        return (() => {\r\n            clearInterval(id)\r\n        }) // для сброса цикла при очередном рендере\r\n    }, [getDialogLastUpdateTime, getDialogList]) // useEffect без зависимостей\r\n\r\n    const DialogListRender = () => {\r\n        return <div>\r\n            <h3 className={classes.dialogListHeader}>dialogList</h3>\r\n            <div className={classes.dialogContainer}>\r\n                {dialogElements} {/*отрисовка диалогов*/}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n{/*\r\n            <h2 className={commonClasses.pageHeader}>Dialogs</h2>\r\n*/}\r\n\r\n                {/* <Col><DialogListRender/></Col> {/*отрисовка диалоглиста*/}\r\n\r\n            <Col>\r\n                <MessagesContainer/> {/*отрисовка сообщений*/}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default DialogList;\r\n\r\n","import React from 'react';\r\nimport DialogList from \"./DialogList\";\r\nimport {\r\n    deleteDialogThunkCreator,\r\n    deleteMessageThunkCreator,\r\n    getDialogLastUpdateTimeTnkCrt,\r\n    getDialogsThunkCreator, getFollowThunkCreator, getMyDialogListThunkCreator,\r\n    sendDialogsThunkCreator,\r\n    setdialogUserID,\r\n    setMessages, updateDialogListThunkCreator\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {getProfileThunkCreator} from \"../../redux/profile-reducer\";\r\nimport NavigateToLoginHoc2 from \"../hoc/NavigateToLoginHoc2\";\r\nimport withRouter2 from \"../hoc/withRouter2\";\r\n\r\nclass DialogListContainer extends React.Component {\r\n    commonPartMountUpdate = () => {// общая часть для componentDidMount и componentDidUpdate\r\n        if (!this.props.userId) { // если перешли на вкладку DialogList с нулевым userId\r\n            if (this.props.messages2.length>0) { // если массив сообщений непустой\r\n                this.props.setMessages([]); // занулить массив сообщений (очистить список сообщений)\r\n                this.props.setdialogUserID(null) // занулить userId (убрать выделение диалога)\r\n            }\r\n            return\r\n        }\r\n        if ( this.props.dialogUserID!==this.props.userId) { // если считаный из URL userId не равен тому, что в BLL\r\n            this.props.setdialogUserID(this.props.userId) // задать в BLL считаный из URL ID\r\n            //здесь запросить профиль выбранного userId через getProfileThunkCreator\r\n            this.props.getProfileThunkCreator(this.props.userId, true, this.props.myId)// при переходе в диалог любого пользователя считать его данные профиля с сервера\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.getDialogList()\r\n        //      console.log(\"DialogListContainer -> componentDidMount\")\r\n        this.commonPartMountUpdate();// общая часть для componentDidMount и componentDidUpdate\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        //       console.log(\"DialogListContainer -> componentDidUpdate\")\r\n        this.commonPartMountUpdate(); // общая часть для componentDidMount и componentDidUpdate\r\n        if  (this.props.dialogLastUpdateTime!==prevProps.dialogLastUpdateTime) { // если время обновления диалога изменилось\r\n            this.getDialogs()// запросить новые сообщения по диалогу\r\n        }\r\n    }\r\n\r\n    getDialogs = () => {\r\n        if (this.props.userId === \"\") {return}// при клике просто по вкладке DialogList\r\n        this.props.getDialogsThunkCreator(this.props.myId, this.props.userId);// получить диалоги\r\n    }\r\n\r\n    getDialogLastUpdateTime = () => {\r\n        if (this.props.userId === \"\") {return}// при клике просто по вкладке DialogList\r\n        this.props.getDialogLastUpdateTimeTnkCrt(this.props.myId, this.props.userId); // получить время последенего обновления диалога\r\n    }\r\n\r\n    getDialogList = () => {\r\n        this.props.getMyDialogListThunkCreator(this.props.myId)\r\n    }\r\n\r\n/*\r\n    sendMessage = (NewMessage) => { // отправка сообщения\r\n        if (!this.props.userId) { // при клике просто по вкладке DialogList\r\n            alert(\"Выберите диалог\") // предупреждение если диалог не выбран\r\n            return\r\n        }\r\n        if (!NewMessage) { // при клике просто по вкладке DialogList\r\n            return // не реагировать на пустые сообщения\r\n        }\r\n\r\n        let profilePage = this.props.profilePage // локальный стейт страницы пользователя\r\n        let userName = 0 // задаем переменную имени пользователя\r\n        let userPhoto = 0 // и его фото для отображения в диалоглисте\r\n        if (profilePage!==null) { // если профиль пользователя уже загружен\r\n            userName = this.props.profilePage.profile.fullName; // переопределить имя пользователя\r\n            userPhoto = this.props.profilePage.profile.photos.small; // и его фото и стейта\r\n        }\r\n\r\n        this.props.sendDialogsThunkCreator( // отправить сообщение\r\n            NewMessage,\r\n            this.props.auth.myId, // мой ID для формирования DialogList собеседника\r\n            this.props.auth.myLogin, // мой логин  для формирования DialogList собеседника\r\n            this.props.auth.myProfile.photos.small, // мое фото  для формирования DialogList собеседника\r\n            this.props.userId, // ID собеседника для формирования моего DialogList\r\n        ); // отправить сообщение\r\n\r\n        this.props.updateDialogListThunkCreator( // обновление диалогЛиста\r\n            this.props.auth.myId, // мой ID\r\n            this.props.userId, // ID с кем веду диалог\r\n            userName, // его имя\r\n            userPhoto // и фото\r\n        )\r\n        //userId1, userId2, Name2, Photo2\r\n    }\r\n*/\r\n\r\n/*    deleteMessage = (messageID) => { // удалить сообщение по его ID в списке\r\n        this.props.deleteMessageThunkCreator(messageID, this.props.myId, this.props.userId);\r\n    }*/\r\n\r\n    deleteDialog = (dialogId, userId2) => {\r\n        this.props.deleteDialogThunkCreator(dialogId, this.props.myId, userId2)\r\n        // здесь сменить URL без ID\r\n    }\r\n\r\n    render () {\r\n        return <div>\r\n            <DialogList\r\n                messages2 ={this.props.messages2}// массив сообщений текущего диалога\r\n                dialogs ={this.props.dialogs} // список диалогов\r\n                dialogs2 ={this.props.dialogs2} // список диалогов с LocalStorage\r\n                {...this.props} // все входящие пропсы пробросили дальше\r\n             //   sendMessage={this.sendMessage} // проброс местного метода отправки сообщений\r\n                getDialogs={this.getDialogs}  // проброс местного метода получить диалоги\r\n                getDialogLastUpdateTime={this.getDialogLastUpdateTime} // проброс метода - получить время обновления текущего диалога\r\n                myId={this.props.myId} // мой ID\r\n             //   deleteMessage = {this.deleteMessage} // удалить сообщение\r\n                getDialogList={this.getDialogList} // периодическая проверка написал ли кто мне, или я с кем диалог начал\r\n                dialogUserID = {this.props.dialogUserID}\r\n                deleteDialog = {this.deleteDialog}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth, // флаг, авторизован ли я сейчас,\r\n        myId: state.auth.myId, // мой ID (авторизованного пользователя)\r\n        dialogUserID: state.dialogsPage.dialogUserID, // ID пользователя, с кем сейчас идет диалог\r\n        messages2: state.dialogsPage.messages2, // массив сообщений текущего диалога\r\n  //      dialogs: state.dialogsPage.dialogs, // список диалогов\r\n        dialogLastUpdateTime: state.dialogsPage.dialogLastUpdateTime,// время последнего времени обновления текущего диалога\r\n        dialogs2: state.dialogsPage.dialogs2, // список диалогов с LocalStorage\r\n        profilePage:state.profilePage, // страница профиля пользователя для создания dialogList\r\n        auth: state.auth,// страница моего профиля для создания dialogList\r\n     //   editProfileStatus: state.auth.editProfileStatus // ошибка правки формы профиля\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n        //    sendDialogsThunkCreator,//санкреатор отправки нового сообщения в диалог\r\n            getDialogsThunkCreator,//санкреатор получения диалогов с данными\r\n            setdialogUserID, // экшнкреатор задания списка сообщений в стейт messages2\r\n            setMessages,// экшнкреатор задания списка сообщений в стейт messages2\r\n            getDialogLastUpdateTimeTnkCrt,//санкреатор получения диалогов с данными\r\n         //   deleteMessageThunkCreator,//санкреатор удаления сообщения из далога\r\n            getProfileThunkCreator,// санкреатор на получение профиля выбранного пользователя\r\n            getFollowThunkCreator,//санкреатор проверки follow/unfollow выбранного юзера для составления списка диалогов\r\n            getMyDialogListThunkCreator,//санкреатор получения моего диалогЛиста\r\n          //  updateDialogListThunkCreator,//санкреатор обновления диалогЛиста (моего когда я пишу кому то сообщение) - запись в localStorage.\r\n            deleteDialogThunkCreator, //санкреатор удаления диалога из диалогЛиста\r\n        }\r\n    ),\r\n    withRouter2,// получить данные ID из URL браузера и добавить в пропсы\r\n    NavigateToLoginHoc2 // проверка, залогинен ли я\r\n)\r\n(DialogListContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["deleteDialog","dialogId","userPhoto","userName","userId","dialogUserID","DialogNamePhotoRender","to","className","classes","src","alt","deleteDialogRender","x","onClick","title","TRANSITION_END","toType","object","undefined","Object","prototype","toString","call","match","toLowerCase","getTransitionDurationFromElement","element","window","getComputedStyle","transitionDuration","transitionDelay","floatTransitionDuration","Number","parseFloat","floatTransitionDelay","split","triggerTransitionEnd","dispatchEvent","Event","isElement","jquery","nodeType","getElement","length","document","querySelector","getjQuery","jQuery","body","hasAttribute","DOMContentLoadedCallbacks","execute","callback","executeAfterTransition","transitionElement","waitForTransition","durationPadding","emulatedDuration","called","handler","target","removeEventListener","addEventListener","setTimeout","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","nativeEvents","Set","makeEventUid","uid","getElementEvents","findHandler","events","callable","delegationSelector","values","find","event","normalizeParameters","originalTypeEvent","delegationFunction","isDelegated","typeEvent","getTypeEvent","has","addHandler","oneOff","fn","relatedTarget","delegateTarget","contains","this","wrapFunction","handlers","previousFunction","replace","selector","domElements","querySelectorAll","parentNode","hydrateObj","EventHandler","off","type","apply","bootstrapDelegationHandler","bootstrapHandler","removeHandler","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","keys","handlerKey","includes","on","one","inNamespace","isNamespace","startsWith","slice","keyHandlers","trigger","args","$","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","evt","cancelable","preventDefault","obj","meta","key","value","defineProperty","configurable","get","entries","elementMap","Map","instance","set","instanceMap","size","console","error","Array","from","delete","normalizeData","JSON","parse","decodeURIComponent","normalizeDataKey","chr","setDataAttribute","setAttribute","removeDataAttribute","removeAttribute","getDataAttributes","attributes","bsKeys","dataset","filter","pureKey","charAt","getDataAttribute","getAttribute","Config","config","_mergeConfigObj","_configAfterMerge","_typeCheckConfig","jsonConfig","Manipulator","constructor","Default","configTypes","DefaultType","property","expectedTypes","valueType","RegExp","test","TypeError","NAME","toUpperCase","Error","BaseComponent","_element","_config","_getConfig","Data","DATA_KEY","EVENT_KEY","getOwnPropertyNames","isAnimated","getInstance","name","SELECTOR_DATA_TOGGLE","EVENT_CLICK_DATA_API","Button","classList","toggle","each","data","getOrCreateInstance","button","closest","plugin","JQUERY_NO_CONFLICT","jQueryInterface","Constructor","noConflict","readyState","push","defineJQueryPlugin","MAX_DELAY_MS","Math","pow","setChainedTimeout","handleRef","timeoutAtMs","delayMs","Date","now","current","useTimeout","isMounted","useMounted","useRef","useWillUnmount","clearTimeout","useMemo","clear","fadeStyles","ENTERING","EXITING","ToastFade","React","props","ref","_jsx","Fade","transitionClasses","displayName","onClose","ToastHeader","bsPrefix","closeLabel","closeVariant","closeButton","children","useBootstrapPrefix","context","useContext","ToastContext","handleClick","useEventCallback","e","_jsxs","classNames","CloseButton","variant","defaultProps","createWithBsPrefix","Toast","transition","Transition","show","animation","delay","autohide","bg","delayRef","onCloseRef","useEffect","autohideTimeout","autohideToast","autohideFunc","useCallback","toastContext","hasAnimation","toast","role","in","unmountOnExit","assign","Body","ToastBody","Header","message","myId","MessageId","deleteMessage","Hour","Minutes","messages2","map","m","id","myInitialValues","newMessage","myValidationSchema","Yup","sendMessage","scrollBottom","initialValues","validationSchema","onSubmit","resetForm","handleReset","label","placeholder","autoFocus","disabled","Image","sendSwg","profilePage","messagesProfileRender","profile","photos","small","fullName","Row","MessagesContainer","NewMessage","sendDialogsThunkCreator","auth","myLogin","myProfile","updateDialogListThunkCreator","alert","messageID","deleteMessageThunkCreator","scrollHeight","max","documentElement","offsetHeight","clientHeight","scrollTo","compose","connect","state","dialogsPage","withRouter2","getDialogList","dialogs2","getDialogLastUpdateTime","d","userPhotoAva","setInterval","clearInterval","Col","DialogListContainer","commonPartMountUpdate","setdialogUserID","getProfileThunkCreator","setMessages","getDialogs","getDialogsThunkCreator","getDialogLastUpdateTimeTnkCrt","getMyDialogListThunkCreator","userId2","deleteDialogThunkCreator","prevProps","prevState","snapshot","dialogLastUpdateTime","dialogs","isAuth","getFollowThunkCreator","NavigateToLoginHoc2"],"sourceRoot":""}