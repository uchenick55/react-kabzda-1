{"version":3,"file":"static/js/136.da528b0e.chunk.js","mappings":"iNAOMA,EAAqB,WAEvB,IAAMC,GAAkCC,EAAAA,EAAAA,KAAY,SAACC,GAAqB,OAAKA,EAAMC,KAAKH,QAAQ,IAElG,OAAOI,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAQ,QAASC,UAAW,QAAQC,SAAA,CAAC,IACpDR,EAASS,KAAK,SAACC,EAAGC,GAAK,OAAKC,EAAAA,EAAAA,KAACC,EAAO,CAAaC,QAASJ,GAAhBC,EAAoB,MAEvE,EAEME,EAAkD,SAAHE,GAAmB,IAAdD,EAAOC,EAAPD,QACtD,OAAOV,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACHI,EAAAA,EAAAA,KAAA,OAAKI,IAAKF,EAAQG,OAASC,EAAWb,MAAO,CAACc,MAAO,QAASC,IAAI,yCAAU,KAC5ER,EAAAA,EAAAA,KAAA,KAAAJ,SAAIM,EAAQO,WAAa,KACzBT,EAAAA,EAAAA,KAAA,SACCE,EAAQA,QAAQ,KACjBF,EAAAA,EAAAA,KAAA,WAER,EAEMU,EAAwB,WAC1B,IAAAC,GAA8BC,EAAAA,EAAAA,UAAkB,IAAIC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CT,EAAOW,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,GAAWC,EAAAA,EAAAA,MAQjB,OAAOzB,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACHI,EAAAA,EAAAA,KAAA,SACIkB,SAJW,MAKXC,MAAOjB,EACPkB,SAAU,SAACC,GACPN,EAAYM,EAAEC,cAAcH,MAChC,KAELnB,EAAAA,EAAAA,KAAA,UAAQuB,QAdS,WAChBP,GAASQ,EAAAA,EAAAA,IAAgBtB,IACzBa,EAAY,GAChB,EAWiCG,SAVd,MAUmCtB,SAAE,SAAa,MAEzE,EAkBA,EAhBuB,WAEnB,IAAMoB,GAAWC,EAAAA,EAAAA,MASjB,OAPAQ,EAAAA,EAAAA,YAAU,WAEN,OADAT,GAASU,EAAAA,EAAAA,OACF,WACHV,GAASW,EAAAA,EAAAA,MACb,CACJ,GAAE,KAEKnC,EAAAA,EAAAA,MAAA,OAAAI,SAAA,EACHI,EAAAA,EAAAA,KAACb,EAAQ,IAAG,KACZa,EAAAA,EAAAA,KAACU,EAAW,IAAG,MAEvB,ECxDA,EALmC,WAC/B,OAAOV,EAAAA,EAAAA,KAAA,OAAAJ,UACHI,EAAAA,EAAAA,KAAC4B,EAAI,KAEb,C","sources":["components/ChatPage/ChatPage.tsx","components/ChatPage/ChatPageContainer.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport userPhoto from \"../../assets/images/no-image3.png\";\nimport {ChatMessageType} from \"../api/chat-api\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {sendMessageThCr, startMessagesListening, stopMessagesListening} from \"../../redux/chat-reducer\";\nimport {GlobalStateType} from \"../../redux/store-redux\";\n\nconst Messages: React.FC = () => {\n\n    const messages:Array<ChatMessageType> = useSelector((state:GlobalStateType) => state.chat.messages )\n\n    return <div style={{height: \"400px\", overflowY: \"auto\"}}> {/*отрисовка списка сообщений*/}\n        {messages.map( (m, index) => <Message key={index} message={m}/> )}\n    </div>\n}\n\nconst Message: React.FC<{ message: ChatMessageType }> = ({message}) => {//отрисовка списка сообщений\n    return <div>\n        <img src={message.photo || userPhoto} style={{width: \"30px\"}} alt='аватар'/> {/*аватарка собеседника*/}\n        <b>{message.userName}</b> {/* его имя*/}\n        <br/>\n        {message.message} {/*само сообщение*/}\n        <hr/>\n    </div>\n}\n\nconst AddMessages: React.FC = () => {\n    const [message, setMessage] = useState<string>( \"\" )\n\n    const dispatch = useDispatch()\n\n    const sendMessage = () => { // ввод новых сообщений\n        dispatch(sendMessageThCr(message))\n        setMessage( \"\" ) // занулить поле воода\n    }\n    const isDisabled = false\n        //readyStatus !== 'ready' // флаг доступности кнопки и поля ввода\n    return <div >\n        <input\n            disabled={isDisabled} // доступность поля ввода\n            value={message} // значение из локального стейта\n            onChange={(e) => { // при изменении поля ввода\n                setMessage( e.currentTarget.value ) // записать значение в локальный стейт\n            }}\n        />\n       <button onClick={sendMessage} disabled={isDisabled} >Send</button> {/* кнопка отправки сообщений*/}\n    </div>\n}\n\nconst Chat: React.FC = () => { // основная страница чата\n\n    const dispatch = useDispatch()\n\n    useEffect(()=>{\n        dispatch(startMessagesListening())\n        return ()=>{\n            dispatch(stopMessagesListening())\n        }\n    },[])\n\n    return <div>\n        <Messages /> {/*отрисовка сообщений чата из websocket*/}\n        <AddMessages /> {/*добавить сообщения в чат websocket*/}\n    </div>\n}\nexport default Chat\n\n\n","import React from \"react\";\nimport Chat from \"./ChatPage\";\n\nconst ChatPageContainer:React.FC = () => {\n    return <div>\n        <Chat/>\n    </div>\n}\nexport default ChatPageContainer\n"],"names":["Messages","messages","useSelector","state","chat","_jsxs","style","height","overflowY","children","map","m","index","_jsx","Message","message","_ref","src","photo","userPhoto","width","alt","userName","AddMessages","_useState","useState","_useState2","_slicedToArray","setMessage","dispatch","useDispatch","disabled","value","onChange","e","currentTarget","onClick","sendMessageThCr","useEffect","startMessagesListening","stopMessagesListening","Chat"],"sourceRoot":""}