{"version":3,"file":"static/js/718.42e4c603.chunk.js","mappings":"oPAqBA,EAf8C,WAC1C,OAAQA,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oTACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8LACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oOACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8cACHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mnBACgBC,EAAAA,EAAAA,KAACC,EAAAA,EAAc,KAClCD,EAAAA,EAAAA,KAAA,KAAAD,SAAG,ilBAEHC,EAAAA,EAAAA,KAACE,EAAAA,EAAK,CAACC,OAAO,EAAMC,IAAKC,EAASC,IAAI,wFAAkBC,MAAM,4FAGtE,C,4CCDA,IAhBgC,WAC5B,OAAOT,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,oQAERC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oJACHD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,sFAA+CC,EAAAA,EAAAA,KAAA,SAAK,yBAEvDF,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,4FAAqDC,EAAAA,EAAAA,KAAA,SAAK,yBAE7DF,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,4EAAqCC,EAAAA,EAAAA,KAAA,SAAK,qBAE7CF,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,ueAA6FC,EAAAA,EAAAA,KAAA,UAC5FA,EAAAA,EAAAA,KAAA,KAAGQ,KAAK,wCAAuCT,SAAC,+CAG5D,C","sources":["components/Info/DialogsInfo.tsx","components/Info/LoginInfoShort.tsx"],"sourcesContent":["import LoginInfoShort from \"./LoginInfoShort\";\nimport React from \"react\";\nimport dialogs from \"../../assets/images/messages.jpg\"\nimport Image from \"react-bootstrap/Image\";\n\ntype DialogsInfoType ={}\nconst DialogsInfo:React.FC<DialogsInfoType> = () => {\n    return (<div>\n        <p>На этой странице ведется диалог с выбранным собеседником;</p>\n        <p>Написаные сообщения можно удалять;</p>\n        <p>Сверху есть ссылка на профиль собеседника;</p>\n        <p>Запись реализована на localStorage, так как в API базового курса хранение диалогов не поддерживается;</p>\n        <p>Диалоги можно проверить, например, войдя в режим диалога в две соседние вкладки одного браузера с двух разных\n            аккаунтов: </p><LoginInfoShort/>\n        <p>После нужно найти друг друга через поиск (или проверить сразу в избранном) и насладиться общением между двух\n            окон :) </p>\n        <Image fluid={true} src={dialogs} alt=\"пример диалогов\" title=\"пример диалогов\"/>\n\n    </div>)\n}\n\nexport default DialogsInfo\n","import React from \"react\";\n\nconst LoginInfoShort:React.FC = () => {\n    return <div>\n        Страницы Profile и Dialogs доступны только после авторизации.\n        <p>Данные для тестового входа:</p>\n        <p>Аккаунт 1: Email: evgeniysazonov1983@gmail.com <br/>\n            Password: 12qwaszx</p>\n        <p>Аккаунт 2 : Email: evgeniysazonov1983@googlemail.com <br/>\n            Password: 12qwaszx</p>\n        <p>Аккаунт 3: Email: free@samuraijs.com <br/>\n            Password: free</p>\n        <p>В случае проблем с авторизацией, попробуйте сначала войти по указанным парам логин/пароль на <br/>\n            <a href=\"https://social-network.samuraijs.com/\">https://social-network.samuraijs.com/</a>\n        </p>\n    </div>\n}\n\nexport default LoginInfoShort\n"],"names":["_jsxs","children","_jsx","LoginInfoShort","Image","fluid","src","dialogs","alt","title","href"],"sourceRoot":""}