{"version":3,"file":"static/js/45.4bd4a5c1.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/users/Users.module.css?d05c","webpack://my-app/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/PaginationByCourse.jsx","components/users/Users.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/users/users-selectors.jsx","components/users/UsersContainer.jsx","components/users/ExportDefaultUsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__UooOC\",\"users\":\"Users_users__uG5mD\",\"inputFindUsers\":\"Users_inputFindUsers__KZpZG\",\"preloader\":\"Users_preloader__Sz3u6\"};","// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Pagination_selected__cyt5G\"};","import React, {useState} from \"react\";\nimport classes from \"./Pagination.module.css\";\nimport {PointerCursor} from \"../../Dark_light_theme/globalStyles\";\n\nlet PaginationByCourse = ({\n                              totalUsersCount, // общее число пользователей на сервере\n                              pageSize, // количество пользователей на одной странице\n                              currentPage, // текущая страница пагинации\n                              onPageChanged, // колбек-функция изменения текущей страницы\n                              PortionSize = 10, // количество отображаемых страниц из всего массива\n                              currentRangeLocal,\n                              onChangeRangeLocal\n                          }) => {\n    // currentRange - текущий диапазон. Он в PortionSize меньше PagesCount\n    //setCurrentRange - изменение currentRange по клику на кнопку\n    // PortionSizeLeft - Нижнее значение порций (не меньше 1)\n    const [mouseHovered, setMouseHovered] = useState(\"\");\n    let PagesCount = Math.ceil(totalUsersCount / pageSize); // сколько всего страниц можно вызвать\n    //с пользователями пачками по PageSize\n    let pages = []; // определяем массив страниц под всех пользователей\n    for (let i = 1; i <= PagesCount; i++) {\n        // В этот массив\n        pages.push(i); // добавляем все страницы пользователей\n    }\n\n    let PortionSizeLeft = 1 + PortionSize * (currentRangeLocal - 1); // Нижнее значение порций (не меньше 1)\n    let PortionSizeRight = PortionSize * currentRangeLocal; // Верхнее значение страниц (не больше PagesCount)\n    let slicedPages2 = pages.filter(\n        // фильтруем весь массив страниц пользователей\n        (p) => p >= PortionSizeLeft && p <= PortionSizeRight // оставляем только в заданном диапазоне\n    );\n    const prevPortion = () => { // по клеку на кнопку Prev\n        if (currentRangeLocal > 1) // если текущий диапазон больше 1\n        {\n            onChangeRangeLocal(-1) // уменьшаем диапазон на 1\n        }\n    };\n\n    const nextPortion = () => {\n        if (currentRangeLocal < Math.ceil(PagesCount / PortionSize))\n            // если текущий диапазон меньше максимального\n        {\n            onChangeRangeLocal(+1) // увеличиваем диапазон на 1\n        }\n    };\n\n    let renderSlicedPages = slicedPages2.map((p) => { // мапинг отобранного массива\n        return (\n            <span\n                key={p} // ключ - страница\n                onMouseLeave={() => { // мышка ушла с элемента (страницы)\n                    setMouseHovered(0); // номер выделенной страницы зануляем\n                }}\n                onClick={() => { // по клику\n                    onPageChanged(p); // смена текущей старницы на кликнутую\n                }}\n                onMouseOver={() => { // мышка сверху элемента (страницы)\n                    setMouseHovered(p); // номер выделенной страницы равен отрисованной странице\n                }}\n            >\n                <span className={\n                    (p === currentPage || p === mouseHovered)?// если страница равна текущей, или на нее навели мышкой\n                     classes.selected: null}> {p} </span>  {/*отрисовать страницу жирным шрифтом, иначе обычным*/}\n            </span>\n        );\n    })\n\n    return (\n        <div>\n            {/*<div> Текущая страница {currentPage}</div>*/}\n            {(currentRangeLocal) > 1\n                ? <button onClick={prevPortion}>Prev</button> // кнопка Prev активна с обработчиком\n                : <button disabled>Prev</button> // кнопка Prev неактивна\n            }\n            <PointerCursor> {/*стиль мышки рука */}\n                {renderSlicedPages} {/*отрисовка пагинации десяти страниц внутри кнопок*/}\n            </PointerCursor>\n\n            <button onClick={nextPortion}>Next</button>\n            {/*кнопка следующая страница*/}\n        </div>\n    );\n};\n\nexport default PaginationByCourse;\n","import React from \"react\";\nimport classes from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/no-image3.png\";\nimport {NavLink} from \"react-router-dom\";\nimport PaginationByCourse from \"../common/Pagination/PaginationByCourse\";\nimport {bedug_mode} from \"../../redux/store-redux\";\nimport ScrollContainer from \"../common/Scroll/ScrollContainer\";\n\nlet Users = ({\n                 totalUsersCount, pageSize, currentPage, onPageChanged, users,\n                 followingInProgress, unfollowAPI, isAuth, followAPI,\n                 SetTermFunction, onChangeTerm, onChangeTermFunction,\n                 onChangeRangeLocal, currentRangeLocal, myID // раскукожили все пропсы\n             }) => {\n\n    if (bedug_mode) {\n        console.log(\"Users\")\n    }\n\n    let FollowUnfollowButtons = ({u, followUnfollowAPICallback, buttonText}) => { // унификация нажатия кнопки Follow/Unfollow\n        return (<span>\n                <button\n                    disabled={followingInProgress.some(id => id === u.id) || u.id === myID}\n                    // отключение возможности повторного нажатия пока не пришел ответ от сервера или если это ваш ID\n                    onClick={() => {\n                        isAuth // проверка авторизации. Если нет, то алерт. Если да, то API запрос на follow/unfollow\n                            ? followUnfollowAPICallback(u.id) //send to server request follow/unfollow from UsersContainer\n                            : alert(\"You are not authorized, please Login\") // алерт авторизуйтесь!\n                    }}> {buttonText}\n                </button>\n                {/* buttonText - текст кнопки Follow/Unfollow*/}\n            </span>\n        )\n    }\n    const handleClick = (e) => { // обработка клика по кнопке\n        e.preventDefault(); // отменить отправку формы по умолчанию с кнопки\n        SetTermFunction() // задать в стейт значения поиска после сабмита\n    }\n\n    let UserItems =\n        users.map((u) => {\n            return (\n                <div key={u.id}>\n                    <div>\n                        <NavLink to={'/profile/' + u.id}>\n                            <img alt={\"userPhoto\"} className={classes.userPhoto}\n                                 src={u.photos.small !== null\n                                     ? u.photos.small\n                                     : userPhoto}/>\n                        </NavLink>\n                    </div>\n                    <div> My FriendList:{\" \"}\n                        {u.followed\n                            ? <FollowUnfollowButtons u={u} followUnfollowAPICallback={unfollowAPI}\n                                                     buttonText={\"Remove\"}/>\n                            : <FollowUnfollowButtons u={u} followUnfollowAPICallback={followAPI}\n                                                     buttonText={\"Add\"}/>\n                        }\n                    </div>\n                    <div>Name: {u.name}</div>\n                    <div>{u.status}</div>\n                    <div>{u.id}</div>\n                </div>\n            )\n        })\n    return <div className={classes.users}>\n\n        <div> Total users: {totalUsersCount}        </div>\n        <div>\n            {<PaginationByCourse\n                totalUsersCount={totalUsersCount} pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChanged={onPageChanged}\n                currentRangeLocal={currentRangeLocal}\n                onChangeRangeLocal={onChangeRangeLocal}\n\n            />}{/*Вывод слайсера вверху страницы (пагинация)*/}\n        </div>\n        <form className={classes.inputFindUsers}>  {/* объединение инпута и кнопки*/}\n            <input\n                value={onChangeTerm} // значение поля поиска захардкодили\n                onChange={(event) => {\n                    onChangeTermFunction(event)\n                }} // по изменению поля получить значение\n                onBlur={SetTermFunction}// задать в локальный стейт значение поиска при потере фокуса\n                placeholder={\"find users\"} // пояснение поля ввода\n                autoFocus // сразу фокусировка на поле ввода\n            />\n            <button onClick={handleClick}>Find</button>\n            {/* кнопка с обработчиком клика*/}\n        </form>\n\n        <ScrollContainer\n            child={UserItems}\n            height={window.screen.availHeight - 312}\n            firstInsideContainer={\"UsersUp\"}\n            secondInsideContainer={\"UsersDown\"}\n            containerElement={\"UserContainer\"}\n        /> {/*отрисовка Users в скрол контейнере*/}\n\n    </div>\n}\n\nexport default Users\n\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\";\r\n\r\nexport const usersSelectorsSimple = { // простой селектор получить из стейта users\r\n    getUsersSL: (state) => {\r\n        return state.usersPage.users\r\n    },\r\n    getPageSize: (state) => {// простой селектор получить из стейта pageSize\r\n        return state.usersPage.pageSize\r\n    },\r\n    getTotalUsersCount: (state) => {// простой селектор получить из стейта totalUsersCount\r\n        return state.usersPage.totalUsersCount\r\n    },\r\n    getCurrentPage: (state) => {// простой селектор получить из стейта currentPage\r\n        return state.usersPage.currentPage\r\n    },\r\n    getIsFetching: (state) => {// простой селектор получить из стейта isFetching\r\n        return state.usersPage.isFetching\r\n    },\r\n    getFollowingInProgress: (state) => {// простой селектор получить из стейта followingInProgress\r\n        return state.usersPage.followingInProgress\r\n    },\r\n    getIsAuth: (state) => {// простой селектор получить из стейта isAuth\r\n        return state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let getUsersReselect = createSelector(usersSelectorsSimple.getUsersSL, (users) => {\r\n    return users // имитация сложного селектора через реселект\r\n})\r\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage, setTerm, unfollowThunkCreator,\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {getUsersReselect, usersSelectorsSimple} from \"./users-selectors\";\n\nclass UsersAPI extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onChangeTerm: this.props.term, // задание поискового запроса в локальный стейт обновления поля\n            currentRangeLocal: 1 // текущий диапазон \n        }\n    }\n\n    componentDidMount() {\n        const {getUsersThunkCreator, currentPage, pageSize, term } = this.props; // данные из пропсов для получения пользователей по умолчанию\n        getUsersThunkCreator(currentPage, pageSize, term);\n    }\n    onChangeTermFunction = (event) => {\n        this.setState({onChangeTerm: event.currentTarget.value }) // задание значения поиска при изменении поля\n    }\n    onChangeRangeLocal = (rangeShift) => { // rangeShift - смещение диапазона страниц пагинации2\n        this.setState({currentRangeLocal: this.state.currentRangeLocal + rangeShift })\n\n    }\n    SetTermFunction = () => {\n        this.props.setTerm(this.state.onChangeTerm) // задание в стейт поискового запроса\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.term !== this.props.term) {\n            this.props.setCurrentPage(1)// задание в стейт текущей страницы\n            this.setState({currentRangeLocal: 1}) // перевод диапазона пагинации2 на 1 (сброс)\n            const {getUsersThunkCreator, pageSize, term } = this.props; // получение из проспсов данные для запроса\n            getUsersThunkCreator(1, pageSize, term);// получение списка пользователей с поисковым запросом (переключение на 1 страницу)\n        }\n    }\n\n\n    onPageChanged = (setPage) => {\n        const {setCurrentPage, getUsersThunkCreator, pageSize, term } = this.props;\n        setCurrentPage(setPage, );\n        getUsersThunkCreator(setPage, pageSize, term );\n    }\n    followAPI = (id) => {\n        this.props.followThunkCreator(id, this.props.currentPage,this.props.pageSize, this.props.term)\n    }\n    unfollowAPI = (id) => {\n        this.props.unfollowThunkCreator(id, this.props.currentPage,this.props.pageSize, this.props.term)\n    }\n    render() {\n        const {isFetching, totalUsersCount, pageSize, currentPage, users, followingInProgress, isAuth} = this.props;\n        return <>\n            {isFetching && <Preloader/>}\n            <Users onPageChanged={this.onPageChanged}\n                   totalUsersCount={totalUsersCount}\n                   pageSize={pageSize}\n                   currentPage={currentPage}\n                   users={users}\n                   unfollowAPI={this.unfollowAPI}\n                   followAPI={this.followAPI}\n                   followingInProgress={followingInProgress}\n                   isAuth={isAuth}\n                   SetTermFunction = {this.SetTermFunction}\n                   onChangeTerm = {this.state.onChangeTerm}\n                   onChangeTermFunction = {this.onChangeTermFunction}\n                   currentRangeLocal= {this.state.currentRangeLocal}\n                   onChangeRangeLocal = {this.onChangeRangeLocal}\n                   myID ={this.props.myID}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersReselect(state), // Реселектор users- список пользователей в пачке от сервера\n        pageSize: usersSelectorsSimple.getPageSize(state),// селектор pageSize - количество пользователей на странице\n        totalUsersCount: usersSelectorsSimple.getTotalUsersCount(state), // селектор totalUsersCount - общее число пользователей с сервера\n        currentPage: usersSelectorsSimple.getCurrentPage(state),// селектор currentPage - текущая страница пачки пользователей с сервера\n        isFetching: usersSelectorsSimple.getIsFetching(state), // селектор isFetching - показать крутилку при загрузке страницы\n        followingInProgress: usersSelectorsSimple.getFollowingInProgress(state), // селектор followingInProgress - массив на кого мы подписались, кнопка неактивна\n        isAuth: usersSelectorsSimple.getIsAuth(state), // селектор isAuth - флаг авторизации\n        term: state.usersPage.term,\n        myID: state.auth.myID,\n    }\n}\n\nexport let UsersContainer = connect(mapStateToProps,\n    { setCurrentPage,\n        getUsersThunkCreator, followThunkCreator, unfollowThunkCreator, setTerm})(UsersAPI);\n\n//export default UsersContainer;\n\n\n\n\n\n\n\n\n\n\n\n\n","import {UsersContainer} from \"./UsersContainer\";\r\n// эта компонента нужна только для того чтобы заработал lazy импорт,\r\n// который работает не с именного импорта, а только с импорта по умолчанию\r\nconst ExportDefaultUsersContainer = () => {\r\n    return <UsersContainer/>\r\n}\r\nexport default ExportDefaultUsersContainer\r\n"],"names":["totalUsersCount","pageSize","currentPage","onPageChanged","PortionSize","currentRangeLocal","onChangeRangeLocal","useState","mouseHovered","setMouseHovered","PagesCount","Math","ceil","pages","i","push","PortionSizeLeft","PortionSizeRight","renderSlicedPages","filter","p","map","onMouseLeave","onClick","onMouseOver","className","classes","disabled","users","followingInProgress","unfollowAPI","isAuth","followAPI","SetTermFunction","onChangeTerm","onChangeTermFunction","myID","bedug_mode","console","log","FollowUnfollowButtons","u","followUnfollowAPICallback","buttonText","some","id","alert","UserItems","to","alt","src","photos","small","userPhoto","followed","name","status","value","onChange","event","onBlur","placeholder","autoFocus","e","preventDefault","ScrollContainer","child","height","window","screen","availHeight","firstInsideContainer","secondInsideContainer","containerElement","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","usersSelectorsSimple","state","usersPage","isFetching","auth","getUsersReselect","UsersAPI","props","setState","currentTarget","rangeShift","setTerm","setPage","setCurrentPage","getUsersThunkCreator","term","followThunkCreator","unfollowThunkCreator","this","prevProps","prevState","snapshot","Preloader","React","UsersContainer","connect"],"sourceRoot":""}