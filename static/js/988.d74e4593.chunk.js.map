{"version":3,"file":"static/js/988.d74e4593.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Dialog2Messages2/Messages2/msg2.module.css?e3fe","webpack://my-app/./src/components/Dialog2Messages2/Dialog2/dialog2Render.module.css?aae0","components/common/GetDate.tsx","components/Dialog2Messages2/Dialog2/Dialog2Item.tsx","assets/images/swg/magnifying-glass.svg","components/Dialog2Messages2/Dialog2/Dialog2SearchRender.tsx","components/Dialog2Messages2/Dialog2/Dialog2Render.tsx","assets/images/swg/send-svg2.svg","components/Dialog2Messages2/Messages2/Msg2SendMessage/Msg2SendMessageRender.tsx","components/Dialog2Messages2/Messages2/Msg2SendMessage/Msg2SendMessageContainer.tsx","components/Dialog2Messages2/Messages2/Msg2HeaderNamePhoto/Msg2HeaderNamePhoto.tsx","components/Dialog2Messages2/Messages2/Msg2HeaderNamePhoto/Msg2HeaderNamePhotoContainer.tsx","assets/images/swg/dust-bin2.svg","assets/images/swg/spam1.svg","assets/images/swg/restore1.svg","components/Dialog2Messages2/Messages2/RenderMessages/Msg2DropDownMenu.tsx","components/Dialog2Messages2/Messages2/RenderMessages/Messages2Item.tsx","components/Dialog2Messages2/Messages2/RenderMessages/Msg2RenderMessagesField.tsx","components/Dialog2Messages2/Messages2/RenderMessages/Msg2RenderMessagesFieldContainer.tsx","components/Dialog2Messages2/Messages2/Messages2Render.tsx","components/Dialog2Messages2/Dialog2Messages2COM.tsx","components/Dialog2Messages2/Dialog2Messages2Container.tsx","components/hoc/NavigateToLoginHoc2.jsx","components/hoc/withRouter2.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"legendStyle\":\"msg2_legendStyle__8cjva\",\"fieldSetStyle\":\"msg2_fieldSetStyle__9Si3i\",\"sendSwg\":\"msg2_sendSwg__6J6oT\",\"messages2RenderMessages\":\"msg2_messages2RenderMessages__FfCI7\",\"MobileMessagesLeft\":\"msg2_MobileMessagesLeft__Fszg-\",\"DesktopMessagesLeft\":\"msg2_DesktopMessagesLeft__giM5b\",\"dialog2Messages2Common\":\"msg2_dialog2Messages2Common__Jcsyr\",\"Fixed\":\"msg2_Fixed__NTk8G\",\"messages2NameAndProfileLink\":\"msg2_messages2NameAndProfileLink__KbS-k\",\"messages2ChooseDialog\":\"msg2_messages2ChooseDialog__2IOAU\",\"messages2PrintMessage\":\"msg2_messages2PrintMessage__nJ37v\",\"Msg2HeaderName\":\"msg2_Msg2HeaderName__9TnNU\",\"Msg2HeaderPhoto\":\"msg2_Msg2HeaderPhoto__E1A6y\",\"Msg2HeaderActivityDate\":\"msg2_Msg2HeaderActivityDate__ArIUd\",\"myIdNotMyIdMsg2ComExt\":\"msg2_myIdNotMyIdMsg2ComExt__d61Ae\",\"myIdMessageExt\":\"msg2_myIdMessageExt__COEoZ\",\"NOTmyIdMessageExt\":\"msg2_NOTmyIdMessageExt__korn+\",\"myIdNotMyIdMsg2ComInt\":\"msg2_myIdNotMyIdMsg2ComInt__0+N8k\",\"myIdMessageInt\":\"msg2_myIdMessageInt__2zKFh\",\"NOTmyIdMessageInt\":\"msg2_NOTmyIdMessageInt__Qcpgy\",\"Msg2DropDownMenuExt\":\"msg2_Msg2DropDownMenuExt__xiV4b\",\"Msg2DropDownMenuIntCommon\":\"msg2_Msg2DropDownMenuIntCommon__Y7URR\",\"Msg2DropDownMenuIntMy\":\"msg2_Msg2DropDownMenuIntMy__SBdru\",\"Msg2DropDownMenuIntNotMy\":\"msg2_Msg2DropDownMenuIntNotMy__bG4Ug\",\"Msg2DropDownItems\":\"msg2_Msg2DropDownItems__Y+1WI\",\"positionRelative\":\"msg2_positionRelative__bgY1G\",\"DropdownItem\":\"msg2_DropdownItem__9NX+O\",\"imgDelete\":\"msg2_imgDelete__cCIhk\",\"imgSpam\":\"msg2_imgSpam__-zA3z\",\"imgRestore\":\"msg2_imgRestore__TGovD\",\"Msg2ItemAdedAtCommon\":\"msg2_Msg2ItemAdedAtCommon__nO1kU\",\"ColorMy\":\"msg2_ColorMy__7rgTv\",\"ColorNotMy\":\"msg2_ColorNotMy__y2cFM\",\"Msg2DeletedText\":\"msg2_Msg2DeletedText__Jvcj9\",\"Msg2DeletedPic\":\"msg2_Msg2DeletedPic__lCgmi\",\"Msg2SpamPic\":\"msg2_Msg2SpamPic__JxWIA\",\"Msg2Body\":\"msg2_Msg2Body__7HtbA\",\"Msg2DateExt\":\"msg2_Msg2DateExt__ioNCS\",\"Msg2DateInt\":\"msg2_Msg2DateInt__JjUdN\"};","// extracted by mini-css-extract-plugin\nexport default {\"Fixed\":\"dialog2Render_Fixed__yAlTJ\",\"dialog2ListCommon\":\"dialog2Render_dialog2ListCommon__ZMqFo\",\"MobileDialogWidth\":\"dialog2Render_MobileDialogWidth__ahAt-\",\"DesktopDialogWidth\":\"dialog2Render_DesktopDialogWidth__zSxVR\",\"Dialog2ItemCardExt\":\"dialog2Render_Dialog2ItemCardExt__LODJo\",\"Dialog2ItemCardInt\":\"dialog2Render_Dialog2ItemCardInt__HQqPI\",\"Dialog2ItemCardName\":\"dialog2Render_Dialog2ItemCardName__zSixE\",\"Dialog2ItemCardPhoto\":\"dialog2Render_Dialog2ItemCardPhoto__jPmgw\",\"Dialog2ItemCardNewMsgCnt\":\"dialog2Render_Dialog2ItemCardNewMsgCnt__TrWvv\",\"Dialog2ItemCardMsgTime\":\"dialog2Render_Dialog2ItemCardMsgTime__2bCd+\",\"dialog2HeaderCommon\":\"dialog2Render_dialog2HeaderCommon__YO-4Y\",\"Dialog2SearchInput\":\"dialog2Render_Dialog2SearchInput__uF7Sy\",\"MagnifyingGlass\":\"dialog2Render_MagnifyingGlass__VpERP\"};","export type DataReturn2Type = {\n    \"Year\": string,\n    \"Month\": string,\n    \"Day\": string,\n    \"Hour\": string,\n    \"Minutes\": string,\n    \"Seconds\": string,\n    isToday: boolean\n};\nexport type GetDateType = (customDate:string) => DataReturn2Type\n\nconst GetDate:GetDateType = (customDate) => {\n    const Data = new Date( !customDate? 0: new Date(customDate).getTime() + 3*3600*1000)\n\n    const isToday: boolean = !!customDate && // этот день сегодня?\n        new Date().getFullYear() ===  Data.getFullYear() &&\n        new Date().getMonth() === Data.getMonth() &&\n        new Date().getDate() === Data.getDate()\n\n    const Year =(\"0\" + Data.getFullYear()).substr(-4) ;\n    const Month =  Data.getMonth();\n    const Day = (\"0\" +  Data.getDate()).substr(-2);\n    const Hour = (\"0\" + Data.getHours()).substr(-2);\n    const Minutes = (\"0\" + Data.getMinutes()).substr(-2) ;\n    const Seconds = (\"0\" + Data.getSeconds()).substr(-2);\n    let fMonth;\n\n    switch (Month)\n    {\n        case 0: fMonth=\"01\"; break;\n        case 1: fMonth=\"02\"; break;\n        case 2: fMonth=\"03\"; break;\n        case 3: fMonth=\"04\"; break;\n        case 4: fMonth=\"05\"; break;\n        case 5: fMonth=\"06\"; break;\n        case 6: fMonth=\"07\"; break;\n        case 7: fMonth=\"08\"; break;\n        case 8: fMonth=\"09\"; break;\n        case 9: fMonth=\"10\"; break;\n        case 10: fMonth=\"11\"; break;\n        case 11: fMonth=\"12\"; break;\n        default: fMonth=\"\"; break;\n    }\n    return {\n        \"Year\": Year,\n        \"Month\": fMonth,\n        \"Day\": Day,\n        \"Hour\": Hour,\n        \"Minutes\": Minutes,\n        \"Seconds\": Seconds,\n        isToday: isToday\n    }\n}\nexport default GetDate\n","import React, {memo} from \"react\";\r\nimport classes from \"./dialog2Render.module.css\"\r\nimport userPhoto from \"../../../assets/images/no-image3.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport GetDate from \"../../common/GetDate\";\r\n\r\ntype Dialog2ItemType = {\r\n    userName: string, //\"evgeniysazonov\"\r\n    hasNewMessages: boolean,\r\n    lastDialogActivityDate: string, //\"2023-04-30T19:10:31.843\"\r\n    newMessagesCount: number, //0\r\n    photosSmall: string,// \"https://social-network.samuraijs.com/activecontent/images/users/27045/user-small.jpg?v=1\",\r\n    id: number\r\n}\r\nconst Dialog2Item: React.FC<Dialog2ItemType> = memo ( (\r\n    {userName, hasNewMessages, photosSmall, lastDialogActivityDate, newMessagesCount, id}) => {\r\n    console.log(\"Dialog2Item\")\r\n    const DateLocal = GetDate(lastDialogActivityDate) // получаем дату последнего сообщения\r\n    return <div className={classes.Dialog2ItemCardExt}>\r\n        <NavLink to={'/messages/' + id}>\r\n            <div className={classes.Dialog2ItemCardInt}>\r\n                <div className={classes.Dialog2ItemCardName}>{userName}</div>   {/*Имя пользователя*/}\r\n                {hasNewMessages && <div\r\n                    className={classes.Dialog2ItemCardNewMsgCnt}>{newMessagesCount}</div>} {/*вывод количества новых сообщений*/}\r\n                <img src={photosSmall ? photosSmall : userPhoto} className={classes.Dialog2ItemCardPhoto}\r\n                     alt=\"CardPhoto\"/> {/*Фото*/}\r\n                <div className={classes.Dialog2ItemCardMsgTime}>{\r\n\r\n                    DateLocal.isToday\r\n                        ? <span> {DateLocal.Hour }:{DateLocal.Minutes}</span>\r\n                        : <span> {DateLocal.Day } {DateLocal.Month} {DateLocal.Year}</span>\r\n\r\n                }</div>\r\n                {/*Время*/}\r\n            </div>\r\n        </NavLink>\r\n    </div>\r\n})\r\nexport default Dialog2Item\r\n","var _g, _g2, _g3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMagnifyingGlass(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"64px\",\n    height: \"64px\",\n    viewBox: \"0 0 1024 1024\",\n    className: \"icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#000000\",\n    transform: \"matrix(-1, 0, 0, 1, 0, 0)\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    strokeWidth: 0\n  })), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_iconCarrier\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M448 768A320 320 0 1 0 448 128a320 320 0 0 0 0 640z m297.344-76.992l214.592 214.592-54.336 54.336-214.592-214.592a384 384 0 1 1 54.336-54.336z\",\n    fill: \"#000000\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagnifyingGlass);\nexport default __webpack_public_path__ + \"static/media/magnifying-glass.3e5e2c21301cb96ebac59d5c181f8886.svg\";\nexport { ForwardRef as ReactComponent };","import React, {memo} from \"react\";\nimport classes from \"./dialog2Render.module.css\"\nimport MagnifyingGlass from \"../../../assets/images/swg/magnifying-glass.svg\"\n\ntype Dialog2SearchRenderType = {\n    SearchValue: string // поисковый запрос в списке диалогов\n    setSearchValue: (SearchValue:string)=>void // функция обновления локального стейта поиска в списке диалогов\n}\nconst Dialog2SearchRender: React.FC<Dialog2SearchRenderType> = memo( ({SearchValue, setSearchValue})=>{\n    console.log(\"отрисовка поля поиска среди dialogs2\")\n    return <div>\n        <input\n            placeholder={\"Поиск\"}\n            value={SearchValue}\n            onChange={(event => setSearchValue(event.target.value))}\n            type=\"text\"\n            className={classes.Dialog2SearchInput} />\n        <img src={MagnifyingGlass} className={classes.MagnifyingGlass} alt=\"Поиск\"/>\n    </div>\n})\nexport default Dialog2SearchRender\n","import React, {useState} from \"react\";\nimport classes from \"./dialog2Render.module.css\"\nimport {GetDialog2AllType} from \"../../api/apiTypes\";\nimport Dialog2Item from \"./Dialog2Item\";\nimport Dialog2SearchRender from \"./Dialog2SearchRender\";\n\ntype Dialog2RenderType = {\n    patch: string,// имя страницы из URL\n    pageWidth: number, // ширина страницы\n    mobileWidth: number, // ширина страницы, считающаяся мобильной версткой\n    dialog2All: GetDialog2AllType, // список всех диалогов для левой колонки\n}\nconst Dialog2Render: React.FC<Dialog2RenderType> = (\n    {pageWidth, mobileWidth, patch, dialog2All}\n) => {\n    const [SearchValue, setSearchValue] = useState<string>( \"\" ) // локальный стейт поискового запроса в диалогах\n    const dialog2AllFiltered: GetDialog2AllType = dialog2All && dialog2All.filter( d2 => { //если список диалогов есть,\n        return d2.userName.toLowerCase().includes( SearchValue.toLowerCase() ) // фильтруем по поисковому запросу\n    } )\n    return <div>\n        { // Компонента Dialog2Render отрисовывается на странице dialog всегда.\n            // На странице messages только при десктопной версии\n            ((patch === \"messages\" && pageWidth > mobileWidth) || (patch === \"dialog2\"))\n            && <div>\n                <div  //Fixed слева вверху.\n                    // Поле остается на странице dialog2 всегда.\n                    // На странице messages только при десктопной версии\n                    className={`${classes.Fixed} ${classes.dialog2HeaderCommon} ${pageWidth < mobileWidth ? classes.MobileDialogWidth : classes.DesktopDialogWidth}`}\n                    /*поиск по именам списка диалогов, с задержкой после ввода, без кнопки отправить*/\n\n                ><Dialog2SearchRender SearchValue={SearchValue} setSearchValue={setSearchValue}/>\n                </div>\n                <div // Fixed слева внизу + прокрутка. Поле остается на странице dialog2 всегда\n                    className={`${classes.Fixed} ${classes.dialog2ListCommon} ${pageWidth < mobileWidth ? classes.MobileDialogWidth : classes.DesktopDialogWidth}`}\n                >\n                    {dialog2AllFiltered.map( d2 => {\n                        const {id, userName, hasNewMessages, lastDialogActivityDate, newMessagesCount, photos} = d2\n                        const photosSmall = photos.small\n                        return <Dialog2Item\n                            key={id} userName={userName} hasNewMessages={hasNewMessages} photosSmall={photosSmall}\n                            lastDialogActivityDate={lastDialogActivityDate} newMessagesCount={newMessagesCount}\n                            id={id}/>\n                    } )}\n                    {/*список диалогов с фильтрацией по имени из заголовка. */}\n                </div>\n            </div>}\n\n    </div>\n}\nexport default React.memo( Dialog2Render )\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSendSvg2(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 70 70\",\n    enableBackground: \"new 0 0 70 70\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.909,5.596c-0.641-0.409-1.462-0.42-2.11-0.026L4.133,41.638c-0.676,0.408-1.048,1.176-0.95,1.958 c0.097,0.783,0.646,1.436,1.399,1.666l18.664,5.707l2.445,12.145c0.142,0.701,0.646,1.273,1.324,1.501 c0.208,0.07,0.423,0.104,0.637,0.104c0.48,0,0.954-0.174,1.325-0.502l9.658-8.542l19.824,6.062 c0.191,0.059,0.389,0.088,0.585,0.088c0.387,0,0.77-0.112,1.1-0.329c0.497-0.328,0.823-0.86,0.889-1.452L66.821,7.5 C66.904,6.744,66.551,6.006,65.909,5.596z M28.928,58.921l-1.333-6.623l6.555,2.005L28.928,58.921z M57.321,57.206l-24.833-7.593 l20.105-23.584c0.358-0.42,0.309-1.051-0.112-1.409c-0.419-0.359-1.052-0.309-1.409,0.112L30.405,48.976l-20.373-6.229 l52.369-31.658L57.321,57.206z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.524,39.707c0.042,0.006,0.083,0.008,0.124,0.008c0.498,0,0.929-0.371,0.991-0.877l0.186-1.5 c0.068-0.549-0.321-1.048-0.869-1.115c-0.547-0.073-1.047,0.322-1.115,0.869l-0.186,1.5C54.587,39.141,54.977,39.64,55.524,39.707z \"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.191,50.396c0.048,0.007,0.096,0.01,0.143,0.01c0.489,0,0.917-0.359,0.989-0.858l0.959-6.691 c0.078-0.547-0.302-1.053-0.849-1.132c-0.542-0.077-1.052,0.302-1.132,0.849l-0.959,6.691 C53.265,49.812,53.645,50.317,54.191,50.396z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSendSvg2);\nexport default __webpack_public_path__ + \"static/media/send-svg2.fca4a68a54e7d25372f7430fe55f0653.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport {Formik, Form, FormikHelpers} from \"formik\"; //формик с компонентами и пользовательским хуком\nimport * as Yup from 'yup' // валидация форм с помошью сторонней библиотеки Yup\nimport Button from \"react-bootstrap/Button\";\nimport sendSwg from \"../../../../assets/images/swg/send-svg2.svg\"\nimport classes from \"../msg2.module.css\"\nimport {ImageMemo, MyTextInputMemo} from \"../../../common/BootstrapMemo/BootstrapMemo\";\n//import DisplayFormikState from \"../../../common/formikCommon/DisplayFormikState\"\n\nconst myInitialValues = { // начальные зачения форм\n    newMessage: \"\",\n}\nconst myValidationSchema = Yup.object( { // валидация форм на required, длину и заполнение полей\n} )\n\ntype DialogFormikType = {\n    isMobile: boolean // флаг, это мобильное разрешение?\n    Msg2SendMessage: (messageBody: string) => void,\n}\ntype ValuesType = {\n    newMessage: string\n}\nconst Msg2SendMessageRender: React.FC<DialogFormikType> = (({Msg2SendMessage, isMobile}) => { // основная компонента с входным колбэком, чтобы забрать данные с форм\n    console.log( \"поле ввода новых сообщений\" )\n    const myOnSubmit = (values: ValuesType, {resetForm}: FormikHelpers<{ newMessage: string; }>) => { // действия по сабмиту\n        Msg2SendMessage( values.newMessage ) // колбек, который принмает результат ввода формы\n        resetForm()// сбросить значение формы после ввода\n    }\n\n    return <div className={`${classes.Fixed} ${classes.messages2PrintMessage} ${isMobile ?\n        classes.MobileMessagesLeft : classes.DesktopMessagesLeft}`}>\n        <Formik\n            initialValues={myInitialValues}\n            validationSchema={myValidationSchema}\n            onSubmit={myOnSubmit}\n        >\n            {({\n                  handleReset,// обнуление полей\n                  values,\n              }) => ( // обертка для вывода значений ввода в любом месте формы паралельно (или в итоге)\n                <Form>\n                    <div className='d-flex d-inline-block justify-content-center align-items-center'>\n                        <div className='col-9'>\n                            <MyTextInputMemo // сообщение в MyPostsBS\n                                label=\"\"\n                                autoFocus={false}\n                                name='newMessage'\n                                type='text'\n                                placeholder='Введите ваше сообщение'\n                                leftLabelLength={\"\"}\n                                // autoFocus={true}\n                            />\n                        </div>\n                        <Button variant={\"light\"} className={\"mx-2\"}\n                                type=\"submit\" //кнопка отправить форму\n                                disabled={!values.newMessage} //скрыть кнопку отправки если нет текста на отправку\n                        >\n\n                            <ImageMemo src={sendSwg} className={classes.sendSwg} alt={'Отправить сообщение'}\n                                       title={'Отправить сообщение'}/>\n                        </Button>\n                    </div>\n                    {/*   <DisplayFormikState/> {/*отображение всего стейта формика*/}\n                </Form>\n            )}\n        </Formik>\n    </div>\n})\n\nexport default Msg2SendMessageRender\n\n","import Msg2SendMessageRender from \"./Msg2SendMessageRender\";\nimport React, {useEffect} from \"react\";\nimport {\n    postDialog2MessageThCr,\n    putDialog2StartThCr\n} from \"../../../../redux/dialog2-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {GlobalStateType} from \"../../../../redux/store-redux\";\n\nconst Msg2SendMessageContainer: React.FC = () => {\n    console.log( \"поле ввода новых сообщений - контейнер\" )\n\n    const dispatch = useDispatch()\n    const pageWidth: number = useSelector( (state: GlobalStateType) => state.app.pageWidth )// ширина страницы\n    const mobileWidth: number = useSelector( (state: GlobalStateType) => state.app.mobileWidth )// ширина страницы, считающаяся мобильной версткой\n\n    const Msg2SendMessage = (messageBody: string) => {\n        dispatch( postDialog2MessageThCr( messageBody, \"2022-04-30T19:10:31.843\") )// отправить сообщение указав ID пользователя\n    }\n\n    const isMobile = pageWidth < mobileWidth // это мобильная верстка?\n\n    return <Msg2SendMessageRender Msg2SendMessage={Msg2SendMessage} isMobile={isMobile}/>\n}\nexport default Msg2SendMessageContainer\n\n","import React from \"react\";\nimport {D2ItemType} from \"../../../api/apiTypes\";\nimport classes from \"../msg2.module.css\"\nimport userPhoto from \"../../../../assets/images/no-image3.png\";\nimport {NavLink} from \"react-router-dom\";\nimport GetDate from \"../../../common/GetDate\";\n\ntype Msg2HeaderNamePhotoType = {\n    d2Item: D2ItemType // отфильтрованый  из dialog2All выбранный пользователь по userId\n    isMobile: boolean // это мобильная верстка?\n}\nconst Msg2HeaderNamePhoto: React.FC<Msg2HeaderNamePhotoType> =  ( ({d2Item, isMobile}) => {\n    console.log(\"шапка сообщений\")\n\n    const photoSrc = d2Item && d2Item.photos && d2Item.photos.small ? d2Item.photos.small : userPhoto // фото с сервера или заглушка\n    const DateLocal = GetDate(d2Item && d2Item.lastUserActivityDate) // получаем дату последнего сообщения\n    return <div className={`${classes.Fixed} ${classes.messages2NameAndProfileLink} ${isMobile ?\n        classes.MobileMessagesLeft : classes.DesktopMessagesLeft}`}\n    >\n        {d2Item && <div>\n            <div className={classes.Msg2HeaderName}>{d2Item && d2Item.userName}</div>\n            <NavLink to={'/profile/' + d2Item.id}>\n                <img className={classes.Msg2HeaderPhoto} src={photoSrc} alt=\"photoSrc\"/>\n            </NavLink>\n            <div className={classes.Msg2HeaderActivityDate}>Был(а): {\" \"}\n                {d2Item &&  DateLocal.isToday\n                    ? <span> сегодня в {DateLocal.Hour }:{DateLocal.Minutes}</span>\n                    : <span> {DateLocal.Day }.{DateLocal.Month}.{DateLocal.Year}</span>\n                }\n            </div>\n        </div>}\n    </div>\n})\nexport default  Msg2HeaderNamePhoto // сокращаем число ререндеров\n","import Msg2HeaderNamePhoto from \"./Msg2HeaderNamePhoto\";\nimport React from \"react\";\nimport {D2ItemType} from \"../../../api/apiTypes\";\nimport {useSelector} from \"react-redux\";\nimport {GlobalStateType} from \"../../../../redux/store-redux\";\n\nconst Msg2HeaderNamePhotoContainer:React.FC = () => {\n    console.log(\"шапка сообщений - контейнер\")\n    const d2Item: D2ItemType = useSelector( (state: GlobalStateType) => state.dialog2.d2Item )// отфильтрованый  из dialog2All выбранный пользователь по userId\n    const pageWidth: number = useSelector( (state: GlobalStateType) => state.app.pageWidth )// ширина страницы\n    const mobileWidth: number = useSelector( (state: GlobalStateType) => state.app.mobileWidth )// ширина страницы, считающаяся мобильной версткой\n\n    const isMobile = pageWidth < mobileWidth // это мобильная верстка?\n\n    return <Msg2HeaderNamePhoto d2Item={d2Item} isMobile={isMobile}/>\n}\nexport default Msg2HeaderNamePhotoContainer\n","var _style, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDustBin2(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"800px\",\n    width: \"800px\",\n    id: \"_x32_\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 512 512\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#000000;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M88.594,464.731C90.958,491.486,113.368,512,140.234,512h231.523c26.858,0,49.276-20.514,51.641-47.269 l25.642-335.928H62.952L88.594,464.731z M420.847,154.93l-23.474,307.496c-1.182,13.37-12.195,23.448-25.616,23.448H140.234 c-13.42,0-24.434-10.078-25.591-23.132L91.145,154.93H420.847z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M182.954,435.339c5.877-0.349,10.35-5.4,9.992-11.269l-10.137-202.234c-0.358-5.876-5.401-10.349-11.278-9.992 c-5.877,0.357-10.35,5.409-9.993,11.277l10.137,202.234C172.033,431.231,177.085,435.696,182.954,435.339z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M256,435.364c5.885,0,10.656-4.763,10.656-10.648V222.474c0-5.885-4.771-10.648-10.656-10.648 c-5.885,0-10.657,4.763-10.657,10.648v202.242C245.344,430.601,250.115,435.364,256,435.364z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M329.046,435.339c5.878,0.357,10.921-4.108,11.278-9.984l10.129-202.234c0.348-5.868-4.116-10.92-9.993-11.277 c-5.877-0.357-10.92,4.116-11.277,9.992L319.054,424.07C318.697,429.938,323.17,434.99,329.046,435.339z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M439.115,64.517c0,0-34.078-5.664-43.34-8.479c-8.301-2.526-80.795-13.566-80.795-13.566l-2.722-19.297 C310.388,9.857,299.484,0,286.642,0h-30.651H225.34c-12.825,0-23.728,9.857-25.616,23.175l-2.721,19.297 c0,0-72.469,11.039-80.778,13.566c-9.261,2.815-43.357,8.479-43.357,8.479C62.544,67.365,55.332,77.172,55.332,88.38v21.926h200.66 h200.676V88.38C456.668,77.172,449.456,67.365,439.115,64.517z M276.318,38.824h-40.636c-3.606,0-6.532-2.925-6.532-6.532 s2.926-6.532,6.532-6.532h40.636c3.606,0,6.532,2.925,6.532,6.532S279.924,38.824,276.318,38.824z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDustBin2);\nexport default __webpack_public_path__ + \"static/media/dust-bin2.9f266211d62f71a82d41f9c57beb3d28.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSpam1(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: \"800px\",\n    width: \"800px\",\n    id: \"Capa_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 319.459 319.459\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.707,97.032l-124.686-76.3c-11.283-6.904-25.301-6.904-36.584,0l-124.686,76.3C6.419,103.356,0,114.809,0,126.924 v141.937c0,19.323,15.721,35.044,35.044,35.044h249.371c19.323,0,35.044-15.721,35.044-35.044V126.924 C319.459,114.809,313.04,103.356,302.707,97.032z M151.877,37.792c2.422-1.482,5.137-2.223,7.853-2.223 c2.715,0,5.431,0.741,7.853,2.223l123.206,75.395l-94.152,61.831v-7.864c12.352-4.763,21.142-16.751,21.142-30.761v-15.071 c0-5.523-4.478-10-10-10s-10,4.477-10,10v15.071c0,2.682-0.819,5.176-2.219,7.246c-2.226-8.225-7.755-15.104-15.075-19.115 l8.426-15.87c2.59-4.878,0.735-10.932-4.143-13.522c-4.88-2.589-10.933-0.734-13.521,4.143l-11.391,21.454h-0.247l-11.391-21.454 c-2.59-4.878-8.644-6.733-13.521-4.143s-6.732,8.644-4.143,13.522l8.426,15.87c-7.32,4.011-12.849,10.891-15.075,19.115 c-1.401-2.07-2.219-4.564-2.219-7.246v-15.071c0-5.523-4.478-10-10-10s-10,4.477-10,10v15.071c0,14.01,8.79,25.998,21.142,30.761 v7.864l-94.152-61.831L151.877,37.792z M153.823,140.729h11.813c6.065,0,11,4.935,11,11v23.345c0,6.065-4.935,11-11,11h-11.813 c-6.065,0-11-4.935-11-11v-23.345C142.823,145.663,147.758,140.729,153.823,140.729z M284.415,283.905H35.044 c-8.295,0-15.044-6.749-15.044-15.044V131.42l119.885,78.731c6.028,3.958,12.937,5.937,19.845,5.937s13.817-1.979,19.845-5.937 l119.885-78.73v137.441C299.459,277.156,292.71,283.905,284.415,283.905z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M97.094,233.038h10.882c3.866,0,7-3.134,7-7s-3.134-7-7-7H97.094c-9.86,0-17.882,8.022-17.882,17.882 s8.021,17.882,17.882,17.882c2.141,0,3.882,1.741,3.882,3.882s-1.741,3.882-3.882,3.882H86.212c-3.866,0-7,3.134-7,7s3.134,7,7,7 h10.882c9.86,0,17.882-8.022,17.882-17.882s-8.021-17.882-17.882-17.882c-2.141,0-3.882-1.741-3.882-3.882 S94.953,233.038,97.094,233.038z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M138.184,219.038h-10.882c-3.866,0-7,3.134-7,7v43.527c0,3.866,3.134,7,7,7s7-3.134,7-7v-14.764h3.882 c9.86,0,17.882-8.022,17.882-17.882S148.044,219.038,138.184,219.038z M138.184,240.802h-3.882v-7.764h3.882 c2.141,0,3.882,1.741,3.882,3.882S140.324,240.802,138.184,240.802z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.273,219.038c-9.86,0-17.882,8.022-17.882,17.882v32.646c0,3.866,3.134,7,7,7s7-3.134,7-7v-14.764h7.764v14.764 c0,3.866,3.134,7,7,7s7-3.134,7-7V236.92C197.155,227.06,189.134,219.038,179.273,219.038z M175.392,240.802v-3.882 c0-2.141,1.741-3.882,3.882-3.882s3.882,1.741,3.882,3.882v3.882H175.392z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.923,219.242c-3.126-0.771-6.376,0.692-7.874,3.542l-5.685,10.829l-5.685-10.829c-1.498-2.852-4.747-4.314-7.874-3.542 c-3.127,0.771-5.324,3.576-5.324,6.796v43.527c0,3.866,3.134,7,7,7s7-3.134,7-7v-15.877c1.287,1.252,3.03,1.984,4.883,1.984 s3.596-0.731,4.883-1.984v15.877c0,3.866,3.134,7,7,7s7-3.134,7-7v-43.527C240.247,222.818,238.05,220.013,234.923,219.242z\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpam1);\nexport default __webpack_public_path__ + \"static/media/spam1.c38e496626cdf8fb2aae68cddb1227de.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRestore1(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    width: \"800px\",\n    height: \"800px\",\n    viewBox: \"0 0 32 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 14 4 C 13.477 4 12.9415 4.1835 12.5625 4.5625 C 12.1845 4.9405 12 5.477 12 6 L 12 7 L 5 7 L 5 9 L 6.09375 9 L 8 27.09375 L 8.09375 28 L 23.90625 28 L 24 27.09375 L 25.90625 9 L 27 9 L 27 7 L 20 7 L 20 6 C 20 5.477 19.8165 4.9415 19.4375 4.5625 C 19.0595 4.1845 18.523 4 18 4 L 14 4 z M 14 6 L 18 6 L 18 7 L 14 7 L 14 6 z M 8.125 9 L 23.875 9 L 22.09375 26 L 9.90625 26 L 8.125 9 z M 16 12 L 12 16 L 15 16 L 15 23 L 17 23 L 17 16 L 20 16 L 16 12 z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRestore1);\nexport default __webpack_public_path__ + \"static/media/restore1.1c96ab0dd3d42ca07131c5eb6a164a47.svg\";\nexport { ForwardRef as ReactComponent };","import Dropdown from 'react-bootstrap/Dropdown';\nimport classes from \"../msg2.module.css\"\nimport React, {memo} from \"react\";\nimport dustBin from \"../../../../assets/images/swg/dust-bin2.svg\"\nimport Spam from \"../../../../assets/images/swg/spam1.svg\"\nimport Restore from \"../../../../assets/images/swg/restore1.svg\"\nimport {\n    deleteDialog2MessageIdThCr,\n    postDialog2MessageIdToSpamThCr,\n    putDialog2MessageIdRestoreThCr\n} from \"../../../../redux/dialog2-reducer\";\nimport {useDispatch} from \"react-redux\";\n\ntype Msg2DropDownMenuType = {\n    id: string\n    isMyMessage: boolean // индикатор, мое ли это сообщение\n    deletedBySender: boolean // помечено, удалено отправителем\n    isSpam: boolean // помечено как спам\n\n}\nconst Msg2DropDownMenu: React.FC<Msg2DropDownMenuType> = memo( (\n    { id, isMyMessage, deletedBySender, isSpam}) => {\n   // console.log(\"Msg2DropDownMenu\")\n\n    const dispatch = useDispatch()\n\n    return (\n        <>\n            <div>\n                <Dropdown>\n                    <Dropdown.Toggle className={\n                        `${isMyMessage ? classes.Msg2DropDownMenuIntMy : classes.Msg2DropDownMenuIntNotMy} \n                         ${classes.Msg2DropDownMenuIntCommon}`}>\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu className={classes.Msg2DropDownItems}>\n                        {!deletedBySender && <Dropdown.Item className={classes.positionRelative} eventKey=\"1\" onClick={() => {\n                            dispatch (deleteDialog2MessageIdThCr(id))// удалить сообщение по его id\n                        }}>\n                            <div className={classes.DropdownItem}>Удалить у меня</div>\n                            <img src={dustBin} className={classes.imgDelete} alt=\"Удалить у меня\"/>\n                        </Dropdown.Item>}\n                        {(!isMyMessage && !isSpam) && <Dropdown.Item className={classes.positionRelative} eventKey=\"2\" onClick={() => {\n                            dispatch( postDialog2MessageIdToSpamThCr(id))// пометить сообщение как спам по его id\n                        }}>\n                            <div className={classes.DropdownItem}>В спам</div>\n                            <img src={Spam} className={classes.imgSpam} alt=\"В спам\"/>\n                        </Dropdown.Item>}\n                        {(deletedBySender || isSpam ) && <Dropdown.Item className={classes.positionRelative} eventKey=\"3\" onClick={() => {\n                           dispatch( putDialog2MessageIdRestoreThCr(id)) // восстановить сообщение из спама и удаленных\n                        }}>\n                            <div className={classes.DropdownItem}>Восстановить</div>\n                            <img src={Restore} className={classes.imgRestore} alt=\"Восстановить\"/>\n                        </Dropdown.Item>}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        </>\n    );\n})\n\nexport default Msg2DropDownMenu;\n","import React, {memo, useState} from \"react\";\nimport classes from \"../msg2.module.css\"\nimport Msg2DropDownMenu from \"./Msg2DropDownMenu\";\nimport dustBin from \"../../../../assets/images/swg/dust-bin2.svg\"\nimport Spam from \"../../../../assets/images/swg/spam1.svg\"\nimport GetDate from \"../../../common/GetDate\";\n\ntype Messages2ItemType = {\n    id: string// \"cde7821a-6981-4f49-8b12-faf681cb1621\",\n    body: string// \"555\",\n    addedAt: string// \"2023-05-01T07:13:00.54\",\n    addedAtPrev: string// \"2023-05-01T07:13:00.54\",\n    senderId: number// 25528,\n    myId: number // номер моего id\n    deletedBySender: boolean // помечено, удалено отправителем\n    isSpam: boolean // помечено как спам\n\n}\nconst Messages2Item: React.FC<Messages2ItemType> = memo (   (\n    {\n        id, body, addedAt, senderId, myId, deletedBySender,\n        isSpam, addedAtPrev\n    }) => {\n   // console.log(\"Messages2Item\")\n    const DateLocal = GetDate( addedAt ) // дата из текста со смещением + 3 часа\n    const PrevDateLocal = GetDate( addedAtPrev ) // предыдущая дата из текста со смещением + 3 часа\n\n    const isMyMessage: boolean = myId === senderId ? true : false // индикатор, что мое сообщение\n    const [IdMsg2DropDowShowed, setIdMsg2DropDowShowed] = useState<string>( \"\" ) // показать ли контекстное меню\n    return <div>\n        {\n            `${DateLocal.Day}-${DateLocal.Month}-${DateLocal.Year}` !== // дата текущего рендера\n            `${PrevDateLocal.Day}-${PrevDateLocal.Month}-${PrevDateLocal.Year}` && // не равна дате предыдущего рендера\n            // тогда отображаем дату в списке сообщений\n            <div className={classes.Msg2DateExt}>\n                <div className={classes.Msg2DateInt}>\n                    {DateLocal.Day}.{DateLocal.Month}.{DateLocal.Year}</div>\n                {/* дата сообщений*/}\n            </div>}\n\n        <div\n            className={`${classes.myIdNotMyIdMsg2ComExt} ${isMyMessage ? classes.myIdMessageExt : classes.NOTmyIdMessageExt}`}>\n            <div\n                className={\n                    `${classes.myIdNotMyIdMsg2ComInt} ${isMyMessage ? classes.myIdMessageInt : classes.NOTmyIdMessageInt}`}\n                onMouseOver={() => { // при наведении на сообщение, записываем в локальный стейт id сообщения\n                    setIdMsg2DropDowShowed( id )\n                }}\n                onMouseLeave={() => {\n                    setIdMsg2DropDowShowed( \"\" ) // при убирании мышки с сообщения, очищаем id локльного стейта нведенного сообщения\n                }}\n            >\n                {deletedBySender\n                    ? <div //если помечено как удаленное, отобразит текст удаления и картинку корзины\n                    >\n                        <img className={classes.Msg2DeletedPic} src={dustBin} alt=\"\"/>\n                        <div className={classes.Msg2DeletedText}> это сообщение удалено</div>\n                    </div>\n                    : <div className={classes.Msg2Body}>{body}</div>//тело сообщения\n                }\n                <div\n                    className={`${classes.Msg2ItemAdedAtCommon} ${isMyMessage ? classes.ColorMy : classes.ColorNotMy}`}>\n                    {DateLocal.Hour}:{DateLocal.Minutes}\n                </div>\n                {/*Время*/}\n                {isSpam && <img className={classes.Msg2SpamPic} src={Spam} alt=\"\"/>\n\n                }\n                <div className={classes.Msg2DropDownMenuExt}>\n\n                    {IdMsg2DropDowShowed === id && // отрисовываем dropDown в сообщения только для локального IdMsg2DropDowShowed\n                    <Msg2DropDownMenu  id={id} isMyMessage={isMyMessage}\n                                      deletedBySender={deletedBySender} isSpam={isSpam}\n\n                    />}\n                </div>\n            </div>\n        </div>\n    </div>\n})\nexport default Messages2Item\n","import React from \"react\";\nimport classes from \"../msg2.module.css\"\nimport Messages2Item from \"./Messages2Item\";\nimport {SendMessageType} from \"../../../api/apiTypes\";\n\ninterface IRenderMessages {\n    isMobile: boolean, // это мобильная верстка?\n    myId: number, // номер моего id\n    messagesNewerThen: Array<SendMessageType>, // сообщения выбранного диалога, новее заданной даты\n\n}\nconst Msg2RenderMessagesField:React.FC<IRenderMessages> = ({messagesNewerThen, myId, isMobile }) => {\n    console.log(\"отрисовка сообщений\")\n\n    return <div //отрисовка всех сообщений\n        // отображается всегда на странице messages\n        className={`${classes.Fixed} ${classes.messages2RenderMessages} ${isMobile ?\n            classes.MobileMessagesLeft : classes.DesktopMessagesLeft}`}\n    >\n        {messagesNewerThen.map( (m2, Ind, Arr) => { // отрисовка всех сообщений\n            const {\n                id, body, addedAt, senderId, deletedBySender, isSpam\n            } = m2\n            const addedAtPrev = Ind>0\n                ?   Arr[Ind-1].addedAt // дата добавления предыдущего сообщения\n                :   \"\"\n            return <Messages2Item key={id} id={id} body={body}\n                                  addedAt={addedAt} senderId={senderId} myId={myId}\n                                  deletedBySender={deletedBySender} isSpam={isSpam}  addedAtPrev={addedAtPrev}\n            />\n        } )}\n        <div className=\"second-block\"></div>\n        {/* метка прокуртки сообщений при каждом обновлении списка сообщений*/}\n    </div>\n}\nexport default Msg2RenderMessagesField\n","import Msg2RenderMessagesField from \"./Msg2RenderMessagesField\";\nimport {useSelector} from \"react-redux\";\nimport {GlobalStateType} from \"../../../../redux/store-redux\";\nimport {SendMessageType} from \"../../../api/apiTypes\";\nimport React from \"react\";\n\nconst Msg2RenderMessagesFieldContainer: React.FC = () => {\n    console.log(\"отрисовка сообщений - контейнер\")\n    const pageWidth: number = useSelector( (state: GlobalStateType) => state.app.pageWidth )// ширина страницы\n    const mobileWidth: number = useSelector( (state: GlobalStateType) => state.app.mobileWidth )// ширина страницы, считающаяся мобильной версткой\n    const messagesNewerThen: Array<SendMessageType> = useSelector( (state: GlobalStateType) => state.dialog2.messagesNewerThen )// сообщения выбранного диалога, новее заданной даты\n    const myId: number = useSelector( (state: GlobalStateType) => state.auth.myId )// номер моего id\n\n    const isMobile = pageWidth < mobileWidth\n    return <Msg2RenderMessagesField\n        messagesNewerThen={messagesNewerThen}\n        myId={myId}\n        isMobile={isMobile}\n    />\n}\nexport default Msg2RenderMessagesFieldContainer\n","import React, {useMemo} from \"react\";\nimport classes from \"./msg2.module.css\"\nimport Msg2SendMessageContainer from \"./Msg2SendMessage/Msg2SendMessageContainer\";\nimport Msg2HeaderNamePhotoContainer from \"./Msg2HeaderNamePhoto/Msg2HeaderNamePhotoContainer\";\nimport Msg2RenderMessagesFieldContainer from \"./RenderMessages/Msg2RenderMessagesFieldContainer\";\nimport {useSelector} from \"react-redux\";\nimport {GlobalStateType} from \"../../../redux/store-redux\";\n\nconst Messages2Render: React.FC = () => {\n    const patch: string = useSelector( (state: GlobalStateType) => state.app.patch )// имя страницы из URL\n    const pageWidth: number = useSelector( (state: GlobalStateType) => state.app.pageWidth )// ширина страницы\n    const mobileWidth: number = useSelector( (state: GlobalStateType) => state.app.mobileWidth )// ширина страницы, считающаяся мобильной версткой\n\n    const isMobile = pageWidth < mobileWidth // это мобильная верстка?\n    const msg2HeaderNamePhotoContainer = useMemo( () => <Msg2HeaderNamePhotoContainer/>, [] )\n    const msg2RenderMessagesFieldContainer = useMemo( () => <Msg2RenderMessagesFieldContainer/>,[] )\n    const msg2SendMessageContainer = useMemo( () => <Msg2SendMessageContainer/>, [] )\n    return <div>\n        {patch === \"dialog2\" && !isMobile && <div\n            //- предложение выбрать диалог\n            // эта часть отображается только на странице dialog и только в десктопной версии\n            className={`${classes.Fixed} ${classes.messages2ChooseDialog}`}\n        > Выберите диалог\n        </div>}\n\n        {patch === \"messages\" &&\n        <div // эта часть компоненты Messages2Render отрисовывается на странице messages всегда.\n        >\n            {msg2HeaderNamePhotoContainer} {/* шапка поля сообщений (ссылка на профиль собеседника и доп информация)*/}\n\n            {msg2RenderMessagesFieldContainer} {/* отрисовка сообщений с собеседником*/}\n\n            {msg2SendMessageContainer} {/* поле ввода новых сообщений*/}\n        </div>\n        }\n\n    </div>\n\n}\nexport default Messages2Render\n","import React from \"react\";\nimport classesCommon from \"./Messages2/msg2.module.css\";\nimport Dialog2Render from \"./Dialog2/Dialog2Render\";\nimport Messages2Render from \"./Messages2/Messages2Render\";\nimport {GetDialog2AllType, D2ItemType, SendMessageType} from \"../api/apiTypes\";\n\n\ntype Dialog2RenderType = {\n    patch: string,// имя страницы из URL\n    pageWidth: number, // ширина страницы\n    mobileWidth: number, // ширина страницы, считающаяся мобильной версткой\n    dialog2All: GetDialog2AllType, // список всех диалогов для левой колонки\n}\n\nconst Dialog2Messages2COM: React.FC<Dialog2RenderType> = (\n    {patch, pageWidth, mobileWidth, dialog2All}\n) => {\n    return <div className={classesCommon.dialog2Messages2Common}>\n        {/*Отрисовка поля диалогов*/}\n        <Dialog2Render pageWidth={pageWidth} mobileWidth={mobileWidth} patch={patch} dialog2All={dialog2All}/>\n\n        <Messages2Render/> {/* отрисовка сообщений (шапка, сообщения, поле ввода)*/}\n    </div>\n}\nexport default Dialog2Messages2COM\n","import React, {useCallback, useEffect, useMemo} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {GlobalStateType} from \"../../redux/store-redux\";\nimport {\n    dialog2Actions, MarkersType,\n    getDialog2AllThCr, getDialog2MessagesNewerThenThCr,\n    postDialog2MessageThCr,\n    putDialog2StartThCr\n} from \"../../redux/dialog2-reducer\";\nimport Dialog2Messages2COM from \"./Dialog2Messages2COM\";\nimport {GetDialog2AllType, D2ItemType, SendMessageType} from \"../api/apiTypes\";\nimport {compose} from \"redux\";\nimport withRouter2 from \"../hoc/withRouter2\";\nimport NavigateToLoginHoc2 from \"../hoc/NavigateToLoginHoc2\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\ntype OwnPropsType = {\n    userId: number, // id пользователя из URL (withRouter2)\n}\n\nconst Dialog2Messages2Container: React.FC<OwnPropsType> = ({userId}) => {\n\n    const markers: MarkersType = useSelector( (state: GlobalStateType) => state.dialog2.markers )//вспомогательные маркеры\n    const d2Item: D2ItemType = useSelector( (state: GlobalStateType) => state.dialog2.d2Item )// отфильтрованый  из dialog2All выбранный пользователь по userId\n    const dialog2All: GetDialog2AllType = useSelector( (state: GlobalStateType) => state.dialog2.dialog2All )// список всех диалогов для левой колонки\n    const patch: string = useSelector( (state: GlobalStateType) => state.app.patch )// имя страницы из URL\n    const pageWidth: number = useSelector( (state: GlobalStateType) => state.app.pageWidth )// ширина страницы\n    const mobileWidth: number = useSelector( (state: GlobalStateType) => state.app.mobileWidth )// ширина страницы, считающаяся мобильной версткой\n    const isFetchingArray: Array<string> = useSelector((state:GlobalStateType) => state.app.isFetchingArray)\n\n    const {setMarkers, setD2Item} = dialog2Actions // получить экшены\n\n    const dispatch = useDispatch()\n    //const wsChannel = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\n\n/*    type NewMessageType = {\n        \"userId\": number,//27695\n        \"userName\": string, //\"catDonut\"\n        \"message\": string, //\"hi\"\n        \"photo\": string //\"https://social-network.samuraijs.com/activecontent/images/users/27695/user-small.jpg?v=1\"\n\n    }*/\n/*    useEffect(()=>{\n        wsChannel.addEventListener('message', (e:MessageEvent)=>{\n            const newMessages: Array<NewMessageType> = JSON.parse(e.data)\n            console.log(newMessages)\n        })\n    },[])*/\n\n    const secondBlock = document.querySelector( '.second-block' ) // ссылка на прокрутку вниз\n\n    const MSG2ScrollBottom = useCallback (() => {\n        secondBlock && secondBlock.scrollIntoView( true )\n    },[secondBlock])//Сама метка className=\"second-block\" находится в дочерней Messages2Render\n\n\n    useEffect(()=>{ // работа с уже имеющимся диалоглистом слева\n        if (userId) {\n            console.log( \"получить сообщения при смене userId\", userId )\n            dispatch( getDialog2MessagesNewerThenThCr( userId, \"2019-04-30T19:10:31.843\" ) )\n            const d2ItemLocal: D2ItemType = dialog2All.filter( d2 => d2.id === userId )[0]\n            if (d2ItemLocal) { //если userId уже присутствует в списке диалогов\n                dispatch( setD2Item( d2ItemLocal ) ) // отфильтрровать и получить d2Item\n            } else {\n                console.log( \"Получение списка диалогов при смене userId\" )\n                getDialog2AllThCr()\n            }\n        }\n\n    },[userId])\n\n    useEffect( () => {\n        if (dialog2All.length===0 && isFetchingArray.length===0) { // если диалоги не получены, и нет запущенных асинхронных запросов\n            console.log( \"получение списка диалогов\" )\n            dispatch( getDialog2AllThCr() )\n        }\n    }, [dialog2All, isFetchingArray] )\n\n    useEffect( () => {\n        if (userId !== 0 ) { //&& !markers.straightFirstUploaded\n            console.log( \"начать диалог по непустому userId \" )\n            dispatch( putDialog2StartThCr( userId ) )\n/*            dispatch( setMarkers( {\n                ...markers, straightFirstUploaded: true // задать маркер прямой загрузки в true\n            } ) )*/\n        }\n    }, [userId] ) // markers, setMarkers, dispatch\n\n\n    useEffect( () => {\n        if (markers.needToScrollBottom) {\n            MSG2ScrollBottom() // прокручиваем список сообщений вниз\n            dispatch( setMarkers( {\n                ...markers, needToScrollBottom: false // ставим маркер - прокручивать вниз не нужно\n            } ) )\n        }\n    }, [MSG2ScrollBottom, markers, setMarkers, dispatch] )\n\n    return <div>\n\n        <Dialog2Messages2COM\n            patch={patch}\n            pageWidth={pageWidth}\n            mobileWidth={mobileWidth}\n            dialog2All={useMemo(()=>dialog2All,[dialog2All]) }\n        />\n    </div>\n}\nexport default compose<React.ComponentType>(\n    withRouter2,// получить данные ID из URL браузера и добавить в пропсы\n    NavigateToLoginHoc2\n)\n( Dialog2Messages2Container );\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {Navigate} from \"react-router-dom\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth, // текущий флаг авторизации\n    }\n}\n\nconst NavigateToLoginHoc2 = (Component) => {\n    const NavigateToLoginHocWithAuth2 = (props) => {\n        if (!props.isAuth) {\n            return <Navigate to='../login'/>;\n        }\n        return <Component {...props}/>;\n    }\n\n    return connect(mapStateToProps, null)(NavigateToLoginHocWithAuth2);\n}\n\nexport default NavigateToLoginHoc2\n","import React from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nconst withRouter2 = (Children) => {\n    const WithRouter2withProps = (props) => {\n        const aaa = {params: useParams()}\n        const userId=Number(aaa.params['*']);\n        return <Children {...props} userId={userId}/>\n    }\n    return connect(null, null)(WithRouter2withProps)\n    // доп данные с connect пока нулевые, если понадобятся, сможем добавить\n}\nexport default withRouter2\n"],"names":["customDate","fMonth","Data","Date","getTime","isToday","getFullYear","getMonth","getDate","Year","substr","Month","Day","Hour","getHours","Minutes","getMinutes","Seconds","getSeconds","memo","_ref","userName","hasNewMessages","photosSmall","lastDialogActivityDate","newMessagesCount","id","console","log","DateLocal","GetDate","_jsx","className","classes","children","NavLink","to","_jsxs","src","userPhoto","alt","SearchValue","setSearchValue","placeholder","value","onChange","event","target","type","MagnifyingGlass","Dialog2Render","pageWidth","mobileWidth","patch","dialog2All","_useState","useState","_useState2","_slicedToArray","dialog2AllFiltered","filter","d2","toLowerCase","includes","concat","Dialog2SearchRender","map","photos","small","Dialog2Item","React","myInitialValues","newMessage","myValidationSchema","Yup","Msg2SendMessage","isMobile","Formik","initialValues","validationSchema","onSubmit","values","_ref2","resetForm","_ref3","handleReset","Form","MyTextInputMemo","label","autoFocus","name","leftLabelLength","Button","variant","disabled","ImageMemo","sendSwg","title","dispatch","useDispatch","useSelector","state","app","Msg2SendMessageRender","messageBody","postDialog2MessageThCr","d2Item","photoSrc","lastUserActivityDate","dialog2","Msg2HeaderNamePhoto","isMyMessage","deletedBySender","isSpam","_Fragment","Dropdown","eventKey","onClick","deleteDialog2MessageIdThCr","dustBin","postDialog2MessageIdToSpamThCr","Spam","putDialog2MessageIdRestoreThCr","Restore","body","addedAt","senderId","myId","addedAtPrev","PrevDateLocal","IdMsg2DropDowShowed","setIdMsg2DropDowShowed","onMouseOver","onMouseLeave","Msg2DropDownMenu","messagesNewerThen","m2","Ind","Arr","Messages2Item","auth","Msg2RenderMessagesField","msg2HeaderNamePhotoContainer","useMemo","Msg2HeaderNamePhotoContainer","msg2RenderMessagesFieldContainer","Msg2RenderMessagesFieldContainer","msg2SendMessageContainer","Msg2SendMessageContainer","classesCommon","Messages2Render","compose","withRouter2","NavigateToLoginHoc2","userId","markers","isFetchingArray","setMarkers","dialog2Actions","setD2Item","secondBlock","document","querySelector","MSG2ScrollBottom","useCallback","scrollIntoView","useEffect","getDialog2MessagesNewerThenThCr","d2ItemLocal","getDialog2AllThCr","length","putDialog2StartThCr","needToScrollBottom","_objectSpread","Dialog2Messages2COM","mapStateToProps","isAuth","Component","connect","props","Navigate","Children","aaa","params","useParams","Number"],"sourceRoot":""}